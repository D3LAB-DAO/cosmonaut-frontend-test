{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar HLRU = require('hashlru');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar HLRU__default = /*#__PURE__*/_interopDefaultLegacy(HLRU);\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction getLruCache(cacheSize) {\n  if (cacheSize >= 1) {\n    return HLRU__default[\"default\"](cacheSize);\n  }\n\n  return {\n    get: function get() {\n      return undefined;\n    },\n    set: function set() {}\n  };\n}\n\nvar CLASS_PART_SEPARATOR = '-';\n\nfunction createClassUtils(config) {\n  var classMap = createClassMap(config);\n\n  function getClassGroupId(className) {\n    var classParts = className.split(CLASS_PART_SEPARATOR); // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  }\n\n  function getConflictingClassGroupIds(classGroupId) {\n    return config.conflictingClassGroups[classGroupId] || [];\n  }\n\n  return {\n    getClassGroupId: getClassGroupId,\n    getConflictingClassGroupIds: getConflictingClassGroupIds\n  };\n}\n\nfunction getGroupRecursive(classParts, classPartObject) {\n  var _classPartObject$vali;\n\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n\n  var currentClassPart = classParts[0];\n  var nextClassPartObject = classPartObject.nextPart[currentClassPart];\n  var classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n\n  var classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return (_classPartObject$vali = classPartObject.validators.find(function (_ref) {\n    var validator = _ref.validator;\n    return validator(classRest);\n  })) == null ? void 0 : _classPartObject$vali.classGroupId;\n}\n\nvar arbitraryPropertyRegex = /^\\[(.+)\\]$/;\n\nfunction getGroupIdForArbitraryProperty(className) {\n  if (arbitraryPropertyRegex.test(className)) {\n    var arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    var property = arbitraryPropertyClassName == null ? void 0 : arbitraryPropertyClassName.substring(0, arbitraryPropertyClassName.indexOf(':'));\n\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n}\n/**\r\n * Exported for testing only\r\n */\n\n\nfunction createClassMap(config) {\n  var theme = config.theme,\n      prefix = config.prefix;\n  var classMap = {\n    nextPart: {},\n    validators: []\n  };\n  var prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(function (_ref2) {\n    var classGroupId = _ref2[0],\n        classGroup = _ref2[1];\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n}\n\nfunction processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {\n  classGroup.forEach(function (classDefinition) {\n    if (typeof classDefinition === 'string') {\n      var classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId: classGroupId\n      });\n      return;\n    }\n\n    Object.entries(classDefinition).forEach(function (_ref3) {\n      var key = _ref3[0],\n          classGroup = _ref3[1];\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n}\n\nfunction getPart(classPartObject, path) {\n  var currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(function (pathPart) {\n    if (currentClassPartObject.nextPart[pathPart] === undefined) {\n      currentClassPartObject.nextPart[pathPart] = {\n        nextPart: {},\n        validators: []\n      };\n    }\n\n    currentClassPartObject = currentClassPartObject.nextPart[pathPart];\n  });\n  return currentClassPartObject;\n}\n\nfunction isThemeGetter(func) {\n  return func.isThemeGetter;\n}\n\nfunction getPrefixedClassGroupEntries(classGroupEntries, prefix) {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n\n  return classGroupEntries.map(function (_ref4) {\n    var classGroupId = _ref4[0],\n        classGroup = _ref4[1];\n    var prefixedClassGroup = classGroup.map(function (classDefinition) {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(function (_ref5) {\n          var key = _ref5[0],\n              value = _ref5[1];\n          return [prefix + key, value];\n        }));\n      }\n\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n}\n\nfunction createConfigUtils(config) {\n  return _extends({\n    cache: getLruCache(config.cacheSize)\n  }, createClassUtils(config));\n}\n\nvar SPLIT_CLASSES_REGEX = /\\s+/;\nvar IMPORTANT_MODIFIER = '!'; // Regex is needed so we don't match against colons in labels for arbitrary values like `text-[color:var(--mystery-var)]`\n// I'd prefer to use a negative lookbehind for all supported labels, but lookbheinds don't have good browser support yet. More info: https://caniuse.com/js-regexp-lookbehind\n\nvar MODIFIER_SEPARATOR_REGEX = /:(?![^[]*\\])/;\nvar MODIFIER_SEPARATOR = ':';\n\nfunction mergeClassList(classList, configUtils) {\n  var getClassGroupId = configUtils.getClassGroupId,\n      getConflictingClassGroupIds = configUtils.getConflictingClassGroupIds;\n  /**\r\n   * Set of classGroupIds in following format:\r\n   * `{importantModifier}{variantModifiers}{classGroupId}`\r\n   * @example 'float'\r\n   * @example 'hover:focus:bg-color'\r\n   * @example '!md:pr'\r\n   */\n\n  var classGroupsInConflict = new Set();\n  return classList.trim().split(SPLIT_CLASSES_REGEX).map(function (originalClassName) {\n    var modifiers = originalClassName.split(MODIFIER_SEPARATOR_REGEX);\n    var classNameWithImportantModifier = modifiers.pop();\n    var hasImportantModifier = classNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    var className = hasImportantModifier ? classNameWithImportantModifier.substring(1) : classNameWithImportantModifier;\n    var classGroupId = getClassGroupId(className);\n\n    if (!classGroupId) {\n      return {\n        isTailwindClass: false,\n        originalClassName: originalClassName\n      };\n    }\n\n    var variantModifier = modifiers.length === 0 ? '' : modifiers.sort().concat('').join(MODIFIER_SEPARATOR);\n    var fullModifier = hasImportantModifier ? IMPORTANT_MODIFIER + variantModifier : variantModifier;\n    return {\n      isTailwindClass: true,\n      modifier: fullModifier,\n      classGroupId: classGroupId,\n      originalClassName: originalClassName\n    };\n  }).reverse() // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n  .filter(function (parsed) {\n    if (!parsed.isTailwindClass) {\n      return true;\n    }\n\n    var modifier = parsed.modifier,\n        classGroupId = parsed.classGroupId;\n    var classId = modifier + \":\" + classGroupId;\n\n    if (classGroupsInConflict.has(classId)) {\n      return false;\n    }\n\n    classGroupsInConflict.add(classId);\n    getConflictingClassGroupIds(classGroupId).forEach(function (group) {\n      return classGroupsInConflict.add(modifier + \":\" + group);\n    });\n    return true;\n  }).reverse().map(function (parsed) {\n    return parsed.originalClassName;\n  }).join(' ');\n}\n\nfunction createTailwindMerge() {\n  for (var _len = arguments.length, createConfig = new Array(_len), _key = 0; _key < _len; _key++) {\n    createConfig[_key] = arguments[_key];\n  }\n\n  var configUtils;\n  var cacheGet;\n  var cacheSet;\n  var functionToCall = initTailwindMerge;\n\n  function initTailwindMerge(classList) {\n    var firstCreateConfig = createConfig[0],\n        restCreateConfig = createConfig.slice(1);\n    var config = restCreateConfig.reduce(function (previousConfig, createConfigCurrent) {\n      return createConfigCurrent(previousConfig);\n    }, firstCreateConfig());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n\n  function tailwindMerge(classList) {\n    var cachedResult = cacheGet(classList);\n\n    if (cachedResult) {\n      return cachedResult;\n    }\n\n    var result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n\n  return function callTailwindMerge() {\n    var classList = '';\n    var temp; // Credits → https://github.com/lukeed/clsx/blob/v1.1.1/src/index.js\n\n    for (var index = 0; index < arguments.length; index += 1) {\n      if (temp = arguments[index]) {\n        classList && (classList += ' ');\n        classList += temp;\n      }\n    }\n\n    return functionToCall(classList);\n  };\n}\n\nfunction fromTheme(key) {\n  var themeGetter = function themeGetter(theme) {\n    return theme[key] || [];\n  };\n\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n}\n\nvar arbitraryValueRegex = /^\\[(.+)\\]$/;\nvar fractionRegex = /^\\d+\\/\\d+$/;\nvar stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nvar tshirtUnitRegex = /^(\\d+)?(xs|sm|md|lg|xl)$/;\nvar lengthUnitRegex = /\\d+(%|px|em|rem|vh|vw|pt|pc|in|cm|mm|cap|ch|ex|lh|rlh|vi|vb|vmin|vmax)/; // Shadow always begins with x and y offset separated by underscore\n\nvar shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\n\nfunction isLength(classPart) {\n  return !Number.isNaN(Number(classPart)) || stringLengths.has(classPart) || fractionRegex.test(classPart) || isArbitraryLength(classPart);\n}\n\nfunction isArbitraryLength(classPart) {\n  var _arbitraryValueRegex$;\n\n  var arbitraryValue = (_arbitraryValueRegex$ = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$[1];\n\n  if (arbitraryValue) {\n    return arbitraryValue.startsWith('length:') || lengthUnitRegex.test(arbitraryValue);\n  }\n\n  return false;\n}\n\nfunction isArbitrarySize(classPart) {\n  var _arbitraryValueRegex$2;\n\n  var arbitraryValue = (_arbitraryValueRegex$2 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$2[1];\n  return arbitraryValue ? arbitraryValue.startsWith('size:') : false;\n}\n\nfunction isArbitraryPosition(classPart) {\n  var _arbitraryValueRegex$3;\n\n  var arbitraryValue = (_arbitraryValueRegex$3 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$3[1];\n  return arbitraryValue ? arbitraryValue.startsWith('position:') : false;\n}\n\nfunction isArbitraryUrl(classPart) {\n  var _arbitraryValueRegex$4;\n\n  var arbitraryValue = (_arbitraryValueRegex$4 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$4[1];\n  return arbitraryValue ? arbitraryValue.startsWith('url(') || arbitraryValue.startsWith('url:') : false;\n}\n\nfunction isArbitraryWeight(classPart) {\n  var _arbitraryValueRegex$5;\n\n  var arbitraryValue = (_arbitraryValueRegex$5 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$5[1];\n  return arbitraryValue ? !Number.isNaN(Number(arbitraryValue)) || arbitraryValue.startsWith('number:') : false;\n}\n\nfunction isInteger(classPart) {\n  var _arbitraryValueRegex$6;\n\n  var arbitraryValue = (_arbitraryValueRegex$6 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$6[1];\n\n  if (arbitraryValue) {\n    return Number.isInteger(Number(arbitraryValue));\n  }\n\n  return Number.isInteger(Number(classPart));\n}\n\nfunction isArbitraryValue(classPart) {\n  return arbitraryValueRegex.test(classPart);\n}\n\nfunction isAny() {\n  return true;\n}\n\nfunction isTshirtSize(classPart) {\n  return tshirtUnitRegex.test(classPart);\n}\n\nfunction isArbitraryShadow(classPart) {\n  var _arbitraryValueRegex$7;\n\n  var arbitraryValue = (_arbitraryValueRegex$7 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$7[1];\n\n  if (arbitraryValue) {\n    return shadowRegex.test(arbitraryValue);\n  }\n\n  return false;\n}\n\nvar validators = {\n  __proto__: null,\n  isLength: isLength,\n  isArbitraryLength: isArbitraryLength,\n  isArbitrarySize: isArbitrarySize,\n  isArbitraryPosition: isArbitraryPosition,\n  isArbitraryUrl: isArbitraryUrl,\n  isArbitraryWeight: isArbitraryWeight,\n  isInteger: isInteger,\n  isArbitraryValue: isArbitraryValue,\n  isAny: isAny,\n  isTshirtSize: isTshirtSize,\n  isArbitraryShadow: isArbitraryShadow\n};\n\nfunction getDefaultConfig() {\n  var colors = fromTheme('colors');\n  var spacing = fromTheme('spacing');\n  var blur = fromTheme('blur');\n  var brightness = fromTheme('brightness');\n  var borderColor = fromTheme('borderColor');\n  var borderRadius = fromTheme('borderRadius');\n  var borderWidth = fromTheme('borderWidth');\n  var contrast = fromTheme('contrast');\n  var grayscale = fromTheme('grayscale');\n  var hueRotate = fromTheme('hueRotate');\n  var invert = fromTheme('invert');\n  var gap = fromTheme('gap');\n  var gradientColorStops = fromTheme('gradientColorStops');\n  var inset = fromTheme('inset');\n  var margin = fromTheme('margin');\n  var opacity = fromTheme('opacity');\n  var padding = fromTheme('padding');\n  var saturate = fromTheme('saturate');\n  var scale = fromTheme('scale');\n  var sepia = fromTheme('sepia');\n  var skew = fromTheme('skew');\n  var space = fromTheme('space');\n  var translate = fromTheme('translate');\n\n  var getOverscroll = function getOverscroll() {\n    return ['auto', 'contain', 'none'];\n  };\n\n  var getOverflow = function getOverflow() {\n    return ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  };\n\n  var getSpacingWithAuto = function getSpacingWithAuto() {\n    return ['auto', spacing];\n  };\n\n  var getLengthWithEmpty = function getLengthWithEmpty() {\n    return ['', isLength];\n  };\n\n  var getIntegerWithAuto = function getIntegerWithAuto() {\n    return ['auto', isInteger];\n  };\n\n  var getPositions = function getPositions() {\n    return ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  };\n\n  var getLineStyles = function getLineStyles() {\n    return ['solid', 'dashed', 'dotted', 'double', 'none'];\n  };\n\n  var getBlendModes = function getBlendModes() {\n    return ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  };\n\n  var getAlign = function getAlign() {\n    return ['start', 'end', 'center', 'between', 'around', 'evenly'];\n  };\n\n  var getZeroAndEmpty = function getZeroAndEmpty() {\n    return ['', '0', isArbitraryValue];\n  };\n\n  var getBreaks = function getBreaks() {\n    return ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  };\n\n  return {\n    cacheSize: 500,\n    theme: {\n      colors: [isAny],\n      spacing: [isLength],\n      blur: ['none', '', isTshirtSize, isArbitraryLength],\n      brightness: [isInteger],\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryLength],\n      borderWidth: getLengthWithEmpty(),\n      contrast: [isInteger],\n      grayscale: getZeroAndEmpty(),\n      hueRotate: [isInteger],\n      invert: getZeroAndEmpty(),\n      gap: [spacing],\n      gradientColorStops: [colors],\n      inset: getSpacingWithAuto(),\n      margin: getSpacingWithAuto(),\n      opacity: [isInteger],\n      padding: [spacing],\n      saturate: [isInteger],\n      scale: [isInteger],\n      sepia: getZeroAndEmpty(),\n      skew: [isInteger, isArbitraryValue],\n      space: [spacing],\n      translate: [spacing]\n    },\n    classGroups: {\n      // Layout\n\n      /**\r\n       * Aspect Ratio\r\n       * @see https://tailwindcss.com/docs/aspect-ratio\r\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n\n      /**\r\n       * Container\r\n       * @see https://tailwindcss.com/docs/container\r\n       */\n      container: ['container'],\n\n      /**\r\n       * Columns\r\n       * @see https://tailwindcss.com/docs/columns\r\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n\n      /**\r\n       * Break After\r\n       * @see https://tailwindcss.com/docs/break-after\r\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n\n      /**\r\n       * Break Before\r\n       * @see https://tailwindcss.com/docs/break-before\r\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n\n      /**\r\n       * Break Inside\r\n       * @see https://tailwindcss.com/docs/break-inside\r\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n\n      /**\r\n       * Box Decoration Break\r\n       * @see https://tailwindcss.com/docs/box-decoration-break\r\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n\n      /**\r\n       * Box Sizing\r\n       * @see https://tailwindcss.com/docs/box-sizing\r\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n\n      /**\r\n       * Display\r\n       * @see https://tailwindcss.com/docs/display\r\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n\n      /**\r\n       * Floats\r\n       * @see https://tailwindcss.com/docs/float\r\n       */\n      \"float\": [{\n        \"float\": ['right', 'left', 'none']\n      }],\n\n      /**\r\n       * Clear\r\n       * @see https://tailwindcss.com/docs/clear\r\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none']\n      }],\n\n      /**\r\n       * Isolation\r\n       * @see https://tailwindcss.com/docs/isolation\r\n       */\n      isolation: ['isolate', 'isolation-auto'],\n\n      /**\r\n       * Object Fit\r\n       * @see https://tailwindcss.com/docs/object-fit\r\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n\n      /**\r\n       * Object Position\r\n       * @see https://tailwindcss.com/docs/object-position\r\n       */\n      'object-position': [{\n        object: [].concat(getPositions(), [isArbitraryValue])\n      }],\n\n      /**\r\n       * Overflow\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n\n      /**\r\n       * Overflow X\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n\n      /**\r\n       * Overflow Y\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n\n      /**\r\n       * Overscroll Behavior\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n\n      /**\r\n       * Overscroll Behavior X\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n\n      /**\r\n       * Overscroll Behavior Y\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n\n      /**\r\n       * Position\r\n       * @see https://tailwindcss.com/docs/position\r\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n\n      /**\r\n       * Top / Right / Bottom / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      inset: [{\n        inset: [inset]\n      }],\n\n      /**\r\n       * Right / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n\n      /**\r\n       * Top / Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n\n      /**\r\n       * Top\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      top: [{\n        top: [inset]\n      }],\n\n      /**\r\n       * Right\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      right: [{\n        right: [inset]\n      }],\n\n      /**\r\n       * Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n\n      /**\r\n       * Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      left: [{\n        left: [inset]\n      }],\n\n      /**\r\n       * Visibility\r\n       * @see https://tailwindcss.com/docs/visibility\r\n       */\n      visibility: ['visible', 'invisible'],\n\n      /**\r\n       * Z-Index\r\n       * @see https://tailwindcss.com/docs/z-index\r\n       */\n      z: [{\n        z: [isLength]\n      }],\n      // Flexbox and Grid\n\n      /**\r\n       * Flex Basis\r\n       * @see https://tailwindcss.com/docs/flex-basis\r\n       */\n      basis: [{\n        basis: [spacing]\n      }],\n\n      /**\r\n       * Flex Direction\r\n       * @see https://tailwindcss.com/docs/flex-direction\r\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n\n      /**\r\n       * Flex Wrap\r\n       * @see https://tailwindcss.com/docs/flex-wrap\r\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n\n      /**\r\n       * Flex\r\n       * @see https://tailwindcss.com/docs/flex\r\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n\n      /**\r\n       * Flex Grow\r\n       * @see https://tailwindcss.com/docs/flex-grow\r\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n\n      /**\r\n       * Flex Shrink\r\n       * @see https://tailwindcss.com/docs/flex-shrink\r\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n\n      /**\r\n       * Order\r\n       * @see https://tailwindcss.com/docs/order\r\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger]\n      }],\n\n      /**\r\n       * Grid Template Columns\r\n       * @see https://tailwindcss.com/docs/grid-template-columns\r\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n\n      /**\r\n       * Grid Column Start / End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: [isInteger]\n        }]\n      }],\n\n      /**\r\n       * Grid Column Start\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start': [{\n        'col-start': getIntegerWithAuto()\n      }],\n\n      /**\r\n       * Grid Column End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-end': [{\n        'col-end': getIntegerWithAuto()\n      }],\n\n      /**\r\n       * Grid Template Rows\r\n       * @see https://tailwindcss.com/docs/grid-template-rows\r\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n\n      /**\r\n       * Grid Row Start / End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger]\n        }]\n      }],\n\n      /**\r\n       * Grid Row Start\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start': [{\n        'row-start': getIntegerWithAuto()\n      }],\n\n      /**\r\n       * Grid Row End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-end': [{\n        'row-end': getIntegerWithAuto()\n      }],\n\n      /**\r\n       * Grid Auto Flow\r\n       * @see https://tailwindcss.com/docs/grid-auto-flow\r\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'row-dense', 'col-dense']\n      }],\n\n      /**\r\n       * Grid Auto Columns\r\n       * @see https://tailwindcss.com/docs/grid-auto-columns\r\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n\n      /**\r\n       * Grid Auto Rows\r\n       * @see https://tailwindcss.com/docs/grid-auto-rows\r\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n\n      /**\r\n       * Gap\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      gap: [{\n        gap: [gap]\n      }],\n\n      /**\r\n       * Gap X\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n\n      /**\r\n       * Gap Y\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n\n      /**\r\n       * Justify Content\r\n       * @see https://tailwindcss.com/docs/justify-content\r\n       */\n      'justify-content': [{\n        justify: getAlign()\n      }],\n\n      /**\r\n       * Justify Items\r\n       * @see https://tailwindcss.com/docs/justify-items\r\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n\n      /**\r\n       * Justify Self\r\n       * @see https://tailwindcss.com/docs/justify-self\r\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n\n      /**\r\n       * Align Content\r\n       * @see https://tailwindcss.com/docs/align-content\r\n       */\n      'align-content': [{\n        content: getAlign()\n      }],\n\n      /**\r\n       * Align Items\r\n       * @see https://tailwindcss.com/docs/align-items\r\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n\n      /**\r\n       * Align Self\r\n       * @see https://tailwindcss.com/docs/align-self\r\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n\n      /**\r\n       * Place Content\r\n       * @see https://tailwindcss.com/docs/place-content\r\n       */\n      'place-content': [{\n        'place-content': [].concat(getAlign(), ['stretch'])\n      }],\n\n      /**\r\n       * Place Items\r\n       * @see https://tailwindcss.com/docs/place-items\r\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'stretch']\n      }],\n\n      /**\r\n       * Place Self\r\n       * @see https://tailwindcss.com/docs/place-self\r\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n\n      /**\r\n       * Padding\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      p: [{\n        p: [padding]\n      }],\n\n      /**\r\n       * Padding X\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      px: [{\n        px: [padding]\n      }],\n\n      /**\r\n       * Padding Y\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      py: [{\n        py: [padding]\n      }],\n\n      /**\r\n       * Padding Top\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pt: [{\n        pt: [padding]\n      }],\n\n      /**\r\n       * Padding Right\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pr: [{\n        pr: [padding]\n      }],\n\n      /**\r\n       * Padding Bottom\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pb: [{\n        pb: [padding]\n      }],\n\n      /**\r\n       * Padding Left\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pl: [{\n        pl: [padding]\n      }],\n\n      /**\r\n       * Margin\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      m: [{\n        m: [margin]\n      }],\n\n      /**\r\n       * Margin X\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mx: [{\n        mx: [margin]\n      }],\n\n      /**\r\n       * Margin Y\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      my: [{\n        my: [margin]\n      }],\n\n      /**\r\n       * Margin Top\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mt: [{\n        mt: [margin]\n      }],\n\n      /**\r\n       * Margin Right\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mr: [{\n        mr: [margin]\n      }],\n\n      /**\r\n       * Margin Bottom\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mb: [{\n        mb: [margin]\n      }],\n\n      /**\r\n       * Margin Left\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      ml: [{\n        ml: [margin]\n      }],\n\n      /**\r\n       * Space Between X\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n\n      /**\r\n       * Space Between X Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-x-reverse': ['space-x-reverse'],\n\n      /**\r\n       * Space Between Y\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n\n      /**\r\n       * Space Between Y Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n\n      /**\r\n       * Width\r\n       * @see https://tailwindcss.com/docs/width\r\n       */\n      w: [{\n        w: ['auto', 'min', 'max', spacing]\n      }],\n\n      /**\r\n       * Min-Width\r\n       * @see https://tailwindcss.com/docs/min-width\r\n       */\n      'min-w': [{\n        'min-w': ['min', 'max', 'fit', isLength]\n      }],\n\n      /**\r\n       * Max-Width\r\n       * @see https://tailwindcss.com/docs/max-width\r\n       */\n      'max-w': [{\n        'max-w': ['0', 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize, isArbitraryLength]\n      }],\n\n      /**\r\n       * Height\r\n       * @see https://tailwindcss.com/docs/height\r\n       */\n      h: [{\n        h: getSpacingWithAuto()\n      }],\n\n      /**\r\n       * Min-Height\r\n       * @see https://tailwindcss.com/docs/min-height\r\n       */\n      'min-h': [{\n        'min-h': ['min', 'max', 'fit', isLength]\n      }],\n\n      /**\r\n       * Max-Height\r\n       * @see https://tailwindcss.com/docs/max-height\r\n       */\n      'max-h': [{\n        'max-h': [spacing, 'min', 'max', 'fit']\n      }],\n      // Typography\n\n      /**\r\n       * Font Size\r\n       * @see https://tailwindcss.com/docs/font-size\r\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n\n      /**\r\n       * Font Smoothing\r\n       * @see https://tailwindcss.com/docs/font-smoothing\r\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n\n      /**\r\n       * Font Style\r\n       * @see https://tailwindcss.com/docs/font-style\r\n       */\n      'font-style': ['italic', 'not-italic'],\n\n      /**\r\n       * Font Weight\r\n       * @see https://tailwindcss.com/docs/font-weight\r\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryWeight]\n      }],\n\n      /**\r\n       * Font Family\r\n       * @see https://tailwindcss.com/docs/font-family\r\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-normal': ['normal-nums'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-ordinal': ['ordinal'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n\n      /**\r\n       * Letter Spacing\r\n       * @see https://tailwindcss.com/docs/letter-spacing\r\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryLength]\n      }],\n\n      /**\r\n       * Line Height\r\n       * @see https://tailwindcss.com/docs/line-height\r\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength]\n      }],\n\n      /**\r\n       * List Style Type\r\n       * @see https://tailwindcss.com/docs/list-style-type\r\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n\n      /**\r\n       * List Style Position\r\n       * @see https://tailwindcss.com/docs/list-style-position\r\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n\n      /**\r\n       * Placeholder Color\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/placeholder-color\r\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n\n      /**\r\n       * Placeholder Opacity\r\n       * @see https://tailwindcss.com/docs/placeholder-opacity\r\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n\n      /**\r\n       * Text Alignment\r\n       * @see https://tailwindcss.com/docs/text-align\r\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify']\n      }],\n\n      /**\r\n       * Text Color\r\n       * @see https://tailwindcss.com/docs/text-color\r\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n\n      /**\r\n       * Text Opacity\r\n       * @see https://tailwindcss.com/docs/text-opacity\r\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n\n      /**\r\n       * Text Decoration\r\n       * @see https://tailwindcss.com/docs/text-decoration\r\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n\n      /**\r\n       * Text Decoration Style\r\n       * @see https://tailwindcss.com/docs/text-decoration-style\r\n       */\n      'text-decoration-style': [{\n        decoration: [].concat(getLineStyles(), ['wavy'])\n      }],\n\n      /**\r\n       * Text Decoration Thickness\r\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\r\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength]\n      }],\n\n      /**\r\n       * Text Underline Offset\r\n       * @see https://tailwindcss.com/docs/text-underline-offset\r\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength]\n      }],\n\n      /**\r\n       * Text Decoration Color\r\n       * @see https://tailwindcss.com/docs/text-decoration-color\r\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n\n      /**\r\n       * Text Transform\r\n       * @see https://tailwindcss.com/docs/text-transform\r\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n\n      /**\r\n       * Text Overflow\r\n       * @see https://tailwindcss.com/docs/text-overflow\r\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n\n      /**\r\n       * Text Indent\r\n       * @see https://tailwindcss.com/docs/text-indent\r\n       */\n      indent: [{\n        indent: [spacing]\n      }],\n\n      /**\r\n       * Vertical Alignment\r\n       * @see https://tailwindcss.com/docs/vertical-align\r\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryLength]\n      }],\n\n      /**\r\n       * Whitespace\r\n       * @see https://tailwindcss.com/docs/whitespace\r\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap']\n      }],\n\n      /**\r\n       * Word Break\r\n       * @see https://tailwindcss.com/docs/word-break\r\n       */\n      \"break\": [{\n        \"break\": ['normal', 'words', 'all']\n      }],\n\n      /**\r\n       * Content\r\n       * @see https://tailwindcss.com/docs/content\r\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n\n      /**\r\n       * Background Attachment\r\n       * @see https://tailwindcss.com/docs/background-attachment\r\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n\n      /**\r\n       * Background Clip\r\n       * @see https://tailwindcss.com/docs/background-clip\r\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n\n      /**\r\n       * Background Opacity\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/background-opacity\r\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n\n      /**\r\n       * Background Origin\r\n       * @see https://tailwindcss.com/docs/background-origin\r\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n\n      /**\r\n       * Background Position\r\n       * @see https://tailwindcss.com/docs/background-position\r\n       */\n      'bg-position': [{\n        bg: [].concat(getPositions(), [isArbitraryPosition])\n      }],\n\n      /**\r\n       * Background Repeat\r\n       * @see https://tailwindcss.com/docs/background-repeat\r\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n\n      /**\r\n       * Background Size\r\n       * @see https://tailwindcss.com/docs/background-size\r\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n\n      /**\r\n       * Background Image\r\n       * @see https://tailwindcss.com/docs/background-image\r\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryUrl]\n      }],\n\n      /**\r\n       * Background Color\r\n       * @see https://tailwindcss.com/docs/background-color\r\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n\n      /**\r\n       * Gradient Color Stops From\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n\n      /**\r\n       * Gradient Color Stops Via\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n\n      /**\r\n       * Gradient Color Stops To\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n\n      /**\r\n       * Border Radius\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Top\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Bottom\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Top Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Top Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Bottom Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Bottom Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n\n      /**\r\n       * Border Width\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n\n      /**\r\n       * Border Width X\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Y\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Top\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Right\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Bottom\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Left\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n\n      /**\r\n       * Border Opacity\r\n       * @see https://tailwindcss.com/docs/border-opacity\r\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n\n      /**\r\n       * Border Style\r\n       * @see https://tailwindcss.com/docs/border-style\r\n       */\n      'border-style': [{\n        border: [].concat(getLineStyles(), ['hidden'])\n      }],\n\n      /**\r\n       * Divide Width X\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n\n      /**\r\n       * Divide Width X Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n\n      /**\r\n       * Divide Width Y\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n\n      /**\r\n       * Divide Width Y Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n\n      /**\r\n       * Divide Opacity\r\n       * @see https://tailwindcss.com/docs/divide-opacity\r\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n\n      /**\r\n       * Divide Style\r\n       * @see https://tailwindcss.com/docs/divide-style\r\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n\n      /**\r\n       * Border Color\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n\n      /**\r\n       * Border Color X\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Y\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Top\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Right\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Bottom\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Left\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n\n      /**\r\n       * Divide Color\r\n       * @see https://tailwindcss.com/docs/divide-color\r\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n\n      /**\r\n       * Outline Style\r\n       * @see https://tailwindcss.com/docs/outline-style\r\n       */\n      'outline-style': [{\n        outline: [''].concat(getLineStyles(), ['hidden'])\n      }],\n\n      /**\r\n       * Outline Offset\r\n       * @see https://tailwindcss.com/docs/outline-offset\r\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength]\n      }],\n\n      /**\r\n       * Outline Width\r\n       * @see https://tailwindcss.com/docs/outline-width\r\n       */\n      'outline-w': [{\n        outline: [isLength]\n      }],\n\n      /**\r\n       * Outline Color\r\n       * @see https://tailwindcss.com/docs/outline-color\r\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n\n      /**\r\n       * Ring Width\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\n      'ring-w': [{\n        ring: getLengthWithEmpty()\n      }],\n\n      /**\r\n       * Ring Width Inset\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\n      'ring-w-inset': ['ring-inset'],\n\n      /**\r\n       * Ring Color\r\n       * @see https://tailwindcss.com/docs/ring-color\r\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n\n      /**\r\n       * Ring Opacity\r\n       * @see https://tailwindcss.com/docs/ring-opacity\r\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n\n      /**\r\n       * Ring Offset Width\r\n       * @see https://tailwindcss.com/docs/ring-offset-width\r\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength]\n      }],\n\n      /**\r\n       * Ring Offset Color\r\n       * @see https://tailwindcss.com/docs/ring-offset-color\r\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n\n      /**\r\n       * Box Shadow\r\n       * @see https://tailwindcss.com/docs/box-shadow\r\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n\n      /**\r\n       * Box Shadow Color\r\n       * @see https://tailwindcss.com/docs/box-shadow-color\r\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n\n      /**\r\n       * Opacity\r\n       * @see https://tailwindcss.com/docs/opacity\r\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n\n      /**\r\n       * Mix Beldn Mode\r\n       * @see https://tailwindcss.com/docs/mix-blend-mode\r\n       */\n      'mix-blend': [{\n        'mix-blend': getBlendModes()\n      }],\n\n      /**\r\n       * Background Blend Mode\r\n       * @see https://tailwindcss.com/docs/background-blend-mode\r\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n\n      /**\r\n       * Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/filter\r\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n\n      /**\r\n       * Blur\r\n       * @see https://tailwindcss.com/docs/blur\r\n       */\n      blur: [{\n        blur: [blur]\n      }],\n\n      /**\r\n       * Brightness\r\n       * @see https://tailwindcss.com/docs/brightness\r\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n\n      /**\r\n       * Contrast\r\n       * @see https://tailwindcss.com/docs/contrast\r\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n\n      /**\r\n       * Drop Shadow\r\n       * @see https://tailwindcss.com/docs/drop-shadow\r\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n\n      /**\r\n       * Grayscale\r\n       * @see https://tailwindcss.com/docs/grayscale\r\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n\n      /**\r\n       * Hue Rotate\r\n       * @see https://tailwindcss.com/docs/hue-rotate\r\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n\n      /**\r\n       * Invert\r\n       * @see https://tailwindcss.com/docs/invert\r\n       */\n      invert: [{\n        invert: [invert]\n      }],\n\n      /**\r\n       * Saturate\r\n       * @see https://tailwindcss.com/docs/saturate\r\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n\n      /**\r\n       * Sepia\r\n       * @see https://tailwindcss.com/docs/sepia\r\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n\n      /**\r\n       * Backdrop Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/backdrop-filter\r\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n\n      /**\r\n       * Backdrop Blur\r\n       * @see https://tailwindcss.com/docs/backdrop-blur\r\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n\n      /**\r\n       * Backdrop Brightness\r\n       * @see https://tailwindcss.com/docs/backdrop-brightness\r\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n\n      /**\r\n       * Backdrop Contrast\r\n       * @see https://tailwindcss.com/docs/backdrop-contrast\r\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n\n      /**\r\n       * Backdrop Grayscale\r\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\r\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n\n      /**\r\n       * Backdrop Hue Rotate\r\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\r\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n\n      /**\r\n       * Backdrop Invert\r\n       * @see https://tailwindcss.com/docs/backdrop-invert\r\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n\n      /**\r\n       * Backdrop Opacity\r\n       * @see https://tailwindcss.com/docs/backdrop-opacity\r\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n\n      /**\r\n       * Backdrop Saturate\r\n       * @see https://tailwindcss.com/docs/backdrop-saturate\r\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n\n      /**\r\n       * Backdrop Sepia\r\n       * @see https://tailwindcss.com/docs/backdrop-sepia\r\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n\n      /**\r\n       * Border Collapse\r\n       * @see https://tailwindcss.com/docs/border-collapse\r\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n\n      /**\r\n       * Table Layout\r\n       * @see https://tailwindcss.com/docs/table-layout\r\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      // Transitions and Animation\n\n      /**\r\n       * Tranisition Property\r\n       * @see https://tailwindcss.com/docs/transition-property\r\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n\n      /**\r\n       * Transition Duration\r\n       * @see https://tailwindcss.com/docs/transition-duration\r\n       */\n      duration: [{\n        duration: [isInteger]\n      }],\n\n      /**\r\n       * Transition Timing Function\r\n       * @see https://tailwindcss.com/docs/transition-timing-function\r\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n\n      /**\r\n       * Transition Delay\r\n       * @see https://tailwindcss.com/docs/transition-delay\r\n       */\n      delay: [{\n        delay: [isInteger]\n      }],\n\n      /**\r\n       * Animation\r\n       * @see https://tailwindcss.com/docs/animation\r\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n\n      /**\r\n       * Transform\r\n       * @see https://tailwindcss.com/docs/transform\r\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n\n      /**\r\n       * Scale\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      scale: [{\n        scale: [scale]\n      }],\n\n      /**\r\n       * Scale X\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n\n      /**\r\n       * Scale Y\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n\n      /**\r\n       * Rotate\r\n       * @see https://tailwindcss.com/docs/rotate\r\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n\n      /**\r\n       * Translate X\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n\n      /**\r\n       * Translate Y\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n\n      /**\r\n       * Skew X\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n\n      /**\r\n       * Skew Y\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n\n      /**\r\n       * Transform Origin\r\n       * @see https://tailwindcss.com/docs/transform-origin\r\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n\n      /**\r\n       * Accent Color\r\n       * @see https://tailwindcss.com/docs/accent-color\r\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n\n      /**\r\n       * Appearance\r\n       * @see https://tailwindcss.com/docs/appearance\r\n       */\n      appearance: ['appearance-none'],\n\n      /**\r\n       * Cursor\r\n       * @see https://tailwindcss.com/docs/cursor\r\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n\n      /**\r\n       * Caret Color\r\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\r\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n\n      /**\r\n       * Pointer Events\r\n       * @see https://tailwindcss.com/docs/pointer-events\r\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n\n      /**\r\n       * Resize\r\n       * @see https://tailwindcss.com/docs/resize\r\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n\n      /**\r\n       * Scroll Behavior\r\n       * @see https://tailwindcss.com/docs/scroll-behavior\r\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n\n      /**\r\n       * Scroll Margin\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-m': [{\n        'scroll-m': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin X\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mx': [{\n        'scroll-mx': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Y\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-my': [{\n        'scroll-my': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Top\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mt': [{\n        'scroll-mt': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Right\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mr': [{\n        'scroll-mr': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mb': [{\n        'scroll-mb': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Left\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-ml': [{\n        'scroll-ml': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-p': [{\n        'scroll-p': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding X\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-px': [{\n        'scroll-px': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Y\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-py': [{\n        'scroll-py': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Top\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pt': [{\n        'scroll-pt': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Right\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pr': [{\n        'scroll-pr': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pb': [{\n        'scroll-pb': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Left\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pl': [{\n        'scroll-pl': [spacing]\n      }],\n\n      /**\r\n       * Scroll Snap Align\r\n       * @see https://tailwindcss.com/docs/scroll-snap-align\r\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n\n      /**\r\n       * Scroll Snap Stop\r\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\r\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n\n      /**\r\n       * Scroll Snap Type\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n\n      /**\r\n       * Scroll Snap Type Strictness\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n\n      /**\r\n       * Touch Action\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\n      touch: [{\n        touch: ['auto', 'none', 'pinch-zoom', 'manipulation', {\n          pan: ['x', 'left', 'right', 'y', 'up', 'down']\n        }]\n      }],\n\n      /**\r\n       * User Select\r\n       * @see https://tailwindcss.com/docs/user-select\r\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n\n      /**\r\n       * Will Change\r\n       * @see https://tailwindcss.com/docs/will-change\r\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n\n      /**\r\n       * Fill\r\n       * @see https://tailwindcss.com/docs/fill\r\n       */\n      fill: [{\n        fill: [colors]\n      }],\n\n      /**\r\n       * Stroke Width\r\n       * @see https://tailwindcss.com/docs/stroke-width\r\n       */\n      'stroke-w': [{\n        stroke: [isLength]\n      }],\n\n      /**\r\n       * Stroke\r\n       * @see https://tailwindcss.com/docs/stroke\r\n       */\n      stroke: [{\n        stroke: [colors]\n      }],\n      // Accessibility\n\n      /**\r\n       * Screen Readers\r\n       * @see https://tailwindcss.com/docs/screen-readers\r\n       */\n      sr: ['sr-only', 'not-sr-only']\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      'col-start-end': ['col-start', 'col-end'],\n      'row-start-end': ['row-start', 'row-end'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      rounded: ['rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-w': ['border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb']\n    }\n  };\n}\n\nvar twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\n/**\r\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\r\n * @param configExtension Partial config to merge into the `baseConfig`.\r\n */\n\nfunction mergeConfigs(baseConfig, configExtension) {\n  for (var key in configExtension) {\n    mergePropertyRecursively(baseConfig, key, configExtension[key]);\n  }\n\n  return baseConfig;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar overrideTypes = /*#__PURE__*/new Set(['string', 'number', 'boolean']);\n\nfunction mergePropertyRecursively(baseObject, mergeKey, mergeValue) {\n  if (!hasOwnProperty.call(baseObject, mergeKey) || overrideTypes.has(typeof mergeValue) || mergeValue === null) {\n    baseObject[mergeKey] = mergeValue;\n    return;\n  }\n\n  if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {\n    baseObject[mergeKey] = baseObject[mergeKey].concat(mergeValue);\n    return;\n  }\n\n  if (typeof mergeValue === 'object' && typeof baseObject[mergeKey] === 'object') {\n    if (baseObject[mergeKey] === null) {\n      baseObject[mergeKey] = mergeValue;\n      return;\n    }\n\n    for (var nextKey in mergeValue) {\n      mergePropertyRecursively(baseObject[mergeKey], nextKey, mergeValue[nextKey]);\n    }\n  }\n}\n\nfunction extendTailwindMerge(configExtension) {\n  for (var _len = arguments.length, createConfig = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    createConfig[_key - 1] = arguments[_key];\n  }\n\n  return typeof configExtension === 'function' ? createTailwindMerge.apply(void 0, [getDefaultConfig, configExtension].concat(createConfig)) : createTailwindMerge.apply(void 0, [function () {\n    return mergeConfigs(getDefaultConfig(), configExtension);\n  }].concat(createConfig));\n}\n\nexports.createTailwindMerge = createTailwindMerge;\nexports.extendTailwindMerge = extendTailwindMerge;\nexports.fromTheme = fromTheme;\nexports.getDefaultConfig = getDefaultConfig;\nexports.mergeConfigs = mergeConfigs;\nexports.twMerge = twMerge;\nexports.validators = validators;","map":{"version":3,"mappings":"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","names":["getLruCache","cacheSize","HLRU","get","undefined","set","CLASS_PART_SEPARATOR","createClassUtils","config","classMap","createClassMap","getClassGroupId","className","classParts","split","length","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","conflictingClassGroups","classPartObject","currentClassPart","nextClassPartObject","nextPart","classGroupFromNextClassPart","slice","validators","classRest","join","find","validator","_classPartObject$vali","arbitraryPropertyRegex","test","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","prefix","prefixedClassGroupEntries","getPrefixedClassGroupEntries","Object","entries","classGroups","forEach","classGroup","processClassesRecursively","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","key","path","currentClassPartObject","pathPart","func","classGroupEntries","map","prefixedClassGroup","fromEntries","value","createConfigUtils","cache","SPLIT_CLASSES_REGEX","IMPORTANT_MODIFIER","MODIFIER_SEPARATOR_REGEX","MODIFIER_SEPARATOR","mergeClassList","classList","configUtils","classGroupsInConflict","Set","trim","originalClassName","modifiers","classNameWithImportantModifier","pop","hasImportantModifier","startsWith","isTailwindClass","variantModifier","sort","concat","fullModifier","modifier","reverse","filter","parsed","classId","has","add","group","createTailwindMerge","createConfig","cacheGet","cacheSet","functionToCall","initTailwindMerge","firstCreateConfig","restCreateConfig","reduce","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","result","callTailwindMerge","temp","index","arguments","fromTheme","themeGetter","arbitraryValueRegex","fractionRegex","stringLengths","tshirtUnitRegex","lengthUnitRegex","shadowRegex","isLength","classPart","Number","isNaN","isArbitraryLength","arbitraryValue","_arbitraryValueRegex$","isArbitrarySize","_arbitraryValueRegex$2","isArbitraryPosition","_arbitraryValueRegex$3","isArbitraryUrl","_arbitraryValueRegex$4","isArbitraryWeight","_arbitraryValueRegex$5","isInteger","_arbitraryValueRegex$6","isArbitraryValue","isAny","isTshirtSize","isArbitraryShadow","_arbitraryValueRegex$7","getDefaultConfig","colors","spacing","blur","brightness","borderColor","borderRadius","borderWidth","contrast","grayscale","hueRotate","invert","gap","gradientColorStops","inset","margin","opacity","padding","saturate","scale","sepia","skew","space","translate","getOverscroll","getOverflow","getSpacingWithAuto","getLengthWithEmpty","getIntegerWithAuto","getPositions","getLineStyles","getBlendModes","getAlign","getZeroAndEmpty","getBreaks","aspect","container","columns","box","display","clear","isolation","object","overflow","overscroll","position","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","span","row","justify","content","items","self","p","px","py","pt","pr","pb","pl","m","mx","my","mt","mr","mb","ml","w","screen","h","text","font","tracking","leading","list","placeholder","decoration","indent","align","whitespace","bg","repeat","from","via","to","rounded","border","divide","outline","ring","shadow","table","transition","duration","ease","delay","animate","transform","rotate","origin","accent","appearance","cursor","caret","resize","scroll","snap","touch","pan","select","fill","stroke","sr","twMerge","mergeConfigs","baseConfig","configExtension","mergePropertyRecursively","hasOwnProperty","prototype","overrideTypes","baseObject","mergeKey","mergeValue","call","Array","isArray","nextKey","extendTailwindMerge"],"sources":["/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/tailwind-merge/src/lib/lru-cache.ts","/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/tailwind-merge/src/lib/class-utils.ts","/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/tailwind-merge/src/lib/config-utils.ts","/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/tailwind-merge/src/lib/merge-classlist.ts","/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/tailwind-merge/src/lib/create-tailwind-merge.ts","/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/tailwind-merge/src/lib/from-theme.ts","/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/tailwind-merge/src/lib/validators.ts","/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/tailwind-merge/src/lib/default-config.ts","/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/tailwind-merge/src/lib/tailwind-merge.ts","/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/tailwind-merge/src/lib/merge-configs.ts","/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/tailwind-merge/src/lib/extend-tailwind-merge.ts"],"sourcesContent":["import HLRU from 'hashlru'\n\n// Export is needed because TypeScript complains about an error otherwise:\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<T> {\n    get(key: string): T | undefined\n    set(key: string, value: T): void\n}\n\nexport function getLruCache<T>(cacheSize: number): LruCache<T> {\n    if (cacheSize >= 1) {\n        return HLRU(cacheSize)\n    }\n\n    return {\n        get: () => undefined,\n        set: () => {},\n    }\n}\n","import { ClassGroupId, Config, ClassGroup, ClassValidator, ThemeObject, ThemeGetter } from './types'\n\nexport interface ClassPartObject {\n    nextPart: Record<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: ClassGroupId\n}\n\ninterface ClassValidatorObject {\n    classGroupId: ClassGroupId\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport function createClassUtils(config: Config) {\n    const classMap = createClassMap(config)\n\n    function getClassGroupId(className: string) {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    function getConflictingClassGroupIds(classGroupId: ClassGroupId) {\n        return config.conflictingClassGroups[classGroupId] || []\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nfunction getGroupRecursive(\n    classParts: string[],\n    classPartObject: ClassPartObject\n): ClassGroupId | undefined {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart[currentClassPart]\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nfunction getGroupIdForArbitraryProperty(className: string) {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':')\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport function createClassMap(config: Config) {\n    const { theme, prefix } = config\n    const classMap: ClassPartObject = {\n        nextPart: {},\n        validators: [],\n    }\n\n    const prefixedClassGroupEntries = getPrefixedClassGroupEntries(\n        Object.entries(config.classGroups),\n        prefix\n    )\n\n    prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n        processClassesRecursively(classGroup, classMap, classGroupId, theme)\n    })\n\n    return classMap\n}\n\nfunction processClassesRecursively(\n    classGroup: ClassGroup,\n    classPartObject: ClassPartObject,\n    classGroupId: ClassGroupId,\n    theme: ThemeObject\n) {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme\n            )\n        })\n    })\n}\n\nfunction getPart(classPartObject: ClassPartObject, path: string) {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (currentClassPartObject.nextPart[pathPart] === undefined) {\n            currentClassPartObject.nextPart[pathPart] = {\n                nextPart: {},\n                validators: [],\n            }\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart[pathPart]!\n    })\n\n    return currentClassPartObject\n}\n\nfunction isThemeGetter(func: ClassValidator | ThemeGetter): func is ThemeGetter {\n    return (func as ThemeGetter).isThemeGetter\n}\n\nfunction getPrefixedClassGroupEntries(\n    classGroupEntries: Array<[classGroupId: string, classGroup: ClassGroup]>,\n    prefix: string | undefined\n): Array<[classGroupId: string, classGroup: ClassGroup]> {\n    if (!prefix) {\n        return classGroupEntries\n    }\n\n    return classGroupEntries.map(([classGroupId, classGroup]) => {\n        const prefixedClassGroup = classGroup.map((classDefinition) => {\n            if (typeof classDefinition === 'string') {\n                return prefix + classDefinition\n            }\n\n            if (typeof classDefinition === 'object') {\n                return Object.fromEntries(\n                    Object.entries(classDefinition).map(([key, value]) => [prefix + key, value])\n                )\n            }\n\n            return classDefinition\n        })\n\n        return [classGroupId, prefixedClassGroup]\n    })\n}\n","import { getLruCache } from './lru-cache'\nimport { Config } from './types'\nimport { createClassUtils } from './class-utils'\n\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createConfigUtils(config: Config) {\n    return {\n        cache: getLruCache<string>(config.cacheSize),\n        ...createClassUtils(config),\n    }\n}\n","import { ConfigUtils } from './config-utils'\n\nconst SPLIT_CLASSES_REGEX = /\\s+/\nconst IMPORTANT_MODIFIER = '!'\n// Regex is needed so we don't match against colons in labels for arbitrary values like `text-[color:var(--mystery-var)]`\n// I'd prefer to use a negative lookbehind for all supported labels, but lookbheinds don't have good browser support yet. More info: https://caniuse.com/js-regexp-lookbehind\nconst MODIFIER_SEPARATOR_REGEX = /:(?![^[]*\\])/\nconst MODIFIER_SEPARATOR = ':'\n\nexport function mergeClassList(classList: string, configUtils: ConfigUtils) {\n    const { getClassGroupId, getConflictingClassGroupIds } = configUtils\n\n    /**\n     * Set of classGroupIds in following format:\n     * `{importantModifier}{variantModifiers}{classGroupId}`\n     * @example 'float'\n     * @example 'hover:focus:bg-color'\n     * @example '!md:pr'\n     */\n    const classGroupsInConflict = new Set<string>()\n\n    return (\n        classList\n            .trim()\n            .split(SPLIT_CLASSES_REGEX)\n            .map((originalClassName) => {\n                const modifiers = originalClassName.split(MODIFIER_SEPARATOR_REGEX)\n                const classNameWithImportantModifier = modifiers.pop()!\n\n                const hasImportantModifier =\n                    classNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER)\n                const className = hasImportantModifier\n                    ? classNameWithImportantModifier.substring(1)\n                    : classNameWithImportantModifier\n\n                const classGroupId = getClassGroupId(className)\n\n                if (!classGroupId) {\n                    return {\n                        isTailwindClass: false as const,\n                        originalClassName,\n                    }\n                }\n\n                const variantModifier =\n                    modifiers.length === 0\n                        ? ''\n                        : modifiers.sort().concat('').join(MODIFIER_SEPARATOR)\n\n                const fullModifier = hasImportantModifier\n                    ? IMPORTANT_MODIFIER + variantModifier\n                    : variantModifier\n\n                return {\n                    isTailwindClass: true as const,\n                    modifier: fullModifier,\n                    classGroupId,\n                    originalClassName,\n                }\n            })\n            .reverse()\n            // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n            .filter((parsed) => {\n                if (!parsed.isTailwindClass) {\n                    return true\n                }\n\n                const { modifier, classGroupId } = parsed\n\n                const classId = `${modifier}:${classGroupId}`\n\n                if (classGroupsInConflict.has(classId)) {\n                    return false\n                }\n\n                classGroupsInConflict.add(classId)\n\n                getConflictingClassGroupIds(classGroupId).forEach((group) =>\n                    classGroupsInConflict.add(`${modifier}:${group}`)\n                )\n\n                return true\n            })\n            .reverse()\n            .map((parsed) => parsed.originalClassName)\n            .join(' ')\n    )\n}\n","import { createConfigUtils } from './config-utils'\nimport { Config } from './types'\nimport { mergeClassList } from './merge-classlist'\n\ntype CreateConfigFirst = () => Config\ntype CreateConfigSubsequent = (config: Config) => Config\ntype ClassLists = ClassListElement[]\ntype ClassListElement = string | undefined | null | false\ntype TailwindMerge = (...classLists: ClassLists) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    ...createConfig: [CreateConfigFirst, ...CreateConfigSubsequent[]]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const [firstCreateConfig, ...restCreateConfig] = createConfig\n\n        const config = restCreateConfig.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            firstCreateConfig()\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        let classList = ''\n        let temp: ClassListElement\n\n        // Credits → https://github.com/lukeed/clsx/blob/v1.1.1/src/index.js\n        for (let index = 0; index < arguments.length; index += 1) {\n            if ((temp = arguments[index])) {\n                classList && (classList += ' ')\n                classList += temp\n            }\n        }\n\n        return functionToCall(classList)\n    }\n}\n","import { ThemeGetter, ThemeObject } from './types'\n\nexport function fromTheme(key: string): ThemeGetter {\n    const themeGetter = (theme: ThemeObject) => theme[key] || []\n\n    themeGetter.isThemeGetter = true as const\n\n    return themeGetter\n}\n","const arbitraryValueRegex = /^\\[(.+)\\]$/\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst stringLengths = new Set(['px', 'full', 'screen'])\nconst tshirtUnitRegex = /^(\\d+)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex = /\\d+(%|px|em|rem|vh|vw|pt|pc|in|cm|mm|cap|ch|ex|lh|rlh|vi|vb|vmin|vmax)/\n// Shadow always begins with x and y offset separated by underscore\nconst shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\n\nexport function isLength(classPart: string) {\n    return (\n        !Number.isNaN(Number(classPart)) ||\n        stringLengths.has(classPart) ||\n        fractionRegex.test(classPart) ||\n        isArbitraryLength(classPart)\n    )\n}\n\nexport function isArbitraryLength(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return arbitraryValue.startsWith('length:') || lengthUnitRegex.test(arbitraryValue)\n    }\n\n    return false\n}\n\nexport function isArbitrarySize(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue ? arbitraryValue.startsWith('size:') : false\n}\n\nexport function isArbitraryPosition(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue ? arbitraryValue.startsWith('position:') : false\n}\n\nexport function isArbitraryUrl(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue\n        ? arbitraryValue.startsWith('url(') || arbitraryValue.startsWith('url:')\n        : false\n}\n\nexport function isArbitraryWeight(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue\n        ? !Number.isNaN(Number(arbitraryValue)) || arbitraryValue.startsWith('number:')\n        : false\n}\n\nexport function isInteger(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return Number.isInteger(Number(arbitraryValue))\n    }\n\n    return Number.isInteger(Number(classPart))\n}\n\nexport function isArbitraryValue(classPart: string) {\n    return arbitraryValueRegex.test(classPart)\n}\n\nexport function isAny() {\n    return true\n}\n\nexport function isTshirtSize(classPart: string) {\n    return tshirtUnitRegex.test(classPart)\n}\n\nexport function isArbitraryShadow(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return shadowRegex.test(arbitraryValue)\n    }\n\n    return false\n}\n","import { fromTheme } from './from-theme'\nimport {\n    isAny,\n    isArbitraryLength,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryUrl,\n    isArbitraryValue,\n    isArbitraryWeight,\n    isInteger,\n    isLength,\n    isTshirtSize,\n} from './validators'\n\nexport function getDefaultConfig() {\n    const colors = fromTheme('colors')\n    const spacing = fromTheme('spacing')\n    const blur = fromTheme('blur')\n    const brightness = fromTheme('brightness')\n    const borderColor = fromTheme('borderColor')\n    const borderRadius = fromTheme('borderRadius')\n    const borderWidth = fromTheme('borderWidth')\n    const contrast = fromTheme('contrast')\n    const grayscale = fromTheme('grayscale')\n    const hueRotate = fromTheme('hueRotate')\n    const invert = fromTheme('invert')\n    const gap = fromTheme('gap')\n    const gradientColorStops = fromTheme('gradientColorStops')\n    const inset = fromTheme('inset')\n    const margin = fromTheme('margin')\n    const opacity = fromTheme('opacity')\n    const padding = fromTheme('padding')\n    const saturate = fromTheme('saturate')\n    const scale = fromTheme('scale')\n    const sepia = fromTheme('sepia')\n    const skew = fromTheme('skew')\n    const space = fromTheme('space')\n    const translate = fromTheme('translate')\n\n    const getOverscroll = () => ['auto', 'contain', 'none'] as const\n    const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\n    const getSpacingWithAuto = () => ['auto', spacing] as const\n    const getLengthWithEmpty = () => ['', isLength] as const\n    const getIntegerWithAuto = () => ['auto', isInteger] as const\n    const getPositions = () =>\n        [\n            'bottom',\n            'center',\n            'left',\n            'left-bottom',\n            'left-top',\n            'right',\n            'right-bottom',\n            'right-top',\n            'top',\n        ] as const\n    const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'] as const\n    const getBlendModes = () =>\n        [\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity',\n        ] as const\n    const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly'] as const\n    const getZeroAndEmpty = () => ['', '0', isArbitraryValue] as const\n    const getBreaks = () =>\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\n\n    return {\n        cacheSize: 500,\n        theme: {\n            colors: [isAny],\n            spacing: [isLength],\n            blur: ['none', '', isTshirtSize, isArbitraryLength],\n            brightness: [isInteger],\n            borderColor: [colors],\n            borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryLength],\n            borderWidth: getLengthWithEmpty(),\n            contrast: [isInteger],\n            grayscale: getZeroAndEmpty(),\n            hueRotate: [isInteger],\n            invert: getZeroAndEmpty(),\n            gap: [spacing],\n            gradientColorStops: [colors],\n            inset: getSpacingWithAuto(),\n            margin: getSpacingWithAuto(),\n            opacity: [isInteger],\n            padding: [spacing],\n            saturate: [isInteger],\n            scale: [isInteger],\n            sepia: getZeroAndEmpty(),\n            skew: [isInteger, isArbitraryValue],\n            space: [spacing],\n            translate: [spacing],\n        },\n        classGroups: {\n            // Layout\n            /**\n             * Aspect Ratio\n             * @see https://tailwindcss.com/docs/aspect-ratio\n             */\n            aspect: [{ aspect: ['auto', 'square', 'video', isArbitraryValue] }],\n            /**\n             * Container\n             * @see https://tailwindcss.com/docs/container\n             */\n            container: ['container'],\n            /**\n             * Columns\n             * @see https://tailwindcss.com/docs/columns\n             */\n            columns: [{ columns: [isTshirtSize] }],\n            /**\n             * Break After\n             * @see https://tailwindcss.com/docs/break-after\n             */\n            'break-after': [{ 'break-after': getBreaks() }],\n            /**\n             * Break Before\n             * @see https://tailwindcss.com/docs/break-before\n             */\n            'break-before': [{ 'break-before': getBreaks() }],\n            /**\n             * Break Inside\n             * @see https://tailwindcss.com/docs/break-inside\n             */\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\n            /**\n             * Box Decoration Break\n             * @see https://tailwindcss.com/docs/box-decoration-break\n             */\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\n            /**\n             * Box Sizing\n             * @see https://tailwindcss.com/docs/box-sizing\n             */\n            box: [{ box: ['border', 'content'] }],\n            /**\n             * Display\n             * @see https://tailwindcss.com/docs/display\n             */\n            display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden',\n            ],\n            /**\n             * Floats\n             * @see https://tailwindcss.com/docs/float\n             */\n            float: [{ float: ['right', 'left', 'none'] }],\n            /**\n             * Clear\n             * @see https://tailwindcss.com/docs/clear\n             */\n            clear: [{ clear: ['left', 'right', 'both', 'none'] }],\n            /**\n             * Isolation\n             * @see https://tailwindcss.com/docs/isolation\n             */\n            isolation: ['isolate', 'isolation-auto'],\n            /**\n             * Object Fit\n             * @see https://tailwindcss.com/docs/object-fit\n             */\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\n            /**\n             * Object Position\n             * @see https://tailwindcss.com/docs/object-position\n             */\n            'object-position': [{ object: [...getPositions(), isArbitraryValue] }],\n            /**\n             * Overflow\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            overflow: [{ overflow: getOverflow() }],\n            /**\n             * Overflow X\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-x': [{ 'overflow-x': getOverflow() }],\n            /**\n             * Overflow Y\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-y': [{ 'overflow-y': getOverflow() }],\n            /**\n             * Overscroll Behavior\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            overscroll: [{ overscroll: getOverscroll() }],\n            /**\n             * Overscroll Behavior X\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-x': [{ 'overscroll-x': getOverscroll() }],\n            /**\n             * Overscroll Behavior Y\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-y': [{ 'overscroll-y': getOverscroll() }],\n            /**\n             * Position\n             * @see https://tailwindcss.com/docs/position\n             */\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n            /**\n             * Top / Right / Bottom / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            inset: [{ inset: [inset] }],\n            /**\n             * Right / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-x': [{ 'inset-x': [inset] }],\n            /**\n             * Top / Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-y': [{ 'inset-y': [inset] }],\n            /**\n             * Top\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            top: [{ top: [inset] }],\n            /**\n             * Right\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            right: [{ right: [inset] }],\n            /**\n             * Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            bottom: [{ bottom: [inset] }],\n            /**\n             * Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            left: [{ left: [inset] }],\n            /**\n             * Visibility\n             * @see https://tailwindcss.com/docs/visibility\n             */\n            visibility: ['visible', 'invisible'],\n            /**\n             * Z-Index\n             * @see https://tailwindcss.com/docs/z-index\n             */\n            z: [{ z: [isLength] }],\n            // Flexbox and Grid\n            /**\n             * Flex Basis\n             * @see https://tailwindcss.com/docs/flex-basis\n             */\n            basis: [{ basis: [spacing] }],\n            /**\n             * Flex Direction\n             * @see https://tailwindcss.com/docs/flex-direction\n             */\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\n            /**\n             * Flex Wrap\n             * @see https://tailwindcss.com/docs/flex-wrap\n             */\n            'flex-wrap': [{ flex: ['wrap', 'wrap-reverse', 'nowrap'] }],\n            /**\n             * Flex\n             * @see https://tailwindcss.com/docs/flex\n             */\n            flex: [{ flex: ['1', 'auto', 'initial', 'none', isArbitraryValue] }],\n            /**\n             * Flex Grow\n             * @see https://tailwindcss.com/docs/flex-grow\n             */\n            grow: [{ grow: getZeroAndEmpty() }],\n            /**\n             * Flex Shrink\n             * @see https://tailwindcss.com/docs/flex-shrink\n             */\n            shrink: [{ shrink: getZeroAndEmpty() }],\n            /**\n             * Order\n             * @see https://tailwindcss.com/docs/order\n             */\n            order: [{ order: ['first', 'last', 'none', isInteger] }],\n            /**\n             * Grid Template Columns\n             * @see https://tailwindcss.com/docs/grid-template-columns\n             */\n            'grid-cols': [{ 'grid-cols': [isAny] }],\n            /**\n             * Grid Column Start / End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start-end': [{ col: ['auto', { span: [isInteger] }] }],\n            /**\n             * Grid Column Start\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start': [{ 'col-start': getIntegerWithAuto() }],\n            /**\n             * Grid Column End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-end': [{ 'col-end': getIntegerWithAuto() }],\n            /**\n             * Grid Template Rows\n             * @see https://tailwindcss.com/docs/grid-template-rows\n             */\n            'grid-rows': [{ 'grid-rows': [isAny] }],\n            /**\n             * Grid Row Start / End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start-end': [{ row: ['auto', { span: [isInteger] }] }],\n            /**\n             * Grid Row Start\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start': [{ 'row-start': getIntegerWithAuto() }],\n            /**\n             * Grid Row End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-end': [{ 'row-end': getIntegerWithAuto() }],\n            /**\n             * Grid Auto Flow\n             * @see https://tailwindcss.com/docs/grid-auto-flow\n             */\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'row-dense', 'col-dense'] }],\n            /**\n             * Grid Auto Columns\n             * @see https://tailwindcss.com/docs/grid-auto-columns\n             */\n            'auto-cols': [{ 'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Grid Auto Rows\n             * @see https://tailwindcss.com/docs/grid-auto-rows\n             */\n            'auto-rows': [{ 'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Gap\n             * @see https://tailwindcss.com/docs/gap\n             */\n            gap: [{ gap: [gap] }],\n            /**\n             * Gap X\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-x': [{ 'gap-x': [gap] }],\n            /**\n             * Gap Y\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-y': [{ 'gap-y': [gap] }],\n            /**\n             * Justify Content\n             * @see https://tailwindcss.com/docs/justify-content\n             */\n            'justify-content': [{ justify: getAlign() }],\n            /**\n             * Justify Items\n             * @see https://tailwindcss.com/docs/justify-items\n             */\n            'justify-items': [{ 'justify-items': ['start', 'end', 'center', 'stretch'] }],\n            /**\n             * Justify Self\n             * @see https://tailwindcss.com/docs/justify-self\n             */\n            'justify-self': [{ 'justify-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            /**\n             * Align Content\n             * @see https://tailwindcss.com/docs/align-content\n             */\n            'align-content': [{ content: getAlign() }],\n            /**\n             * Align Items\n             * @see https://tailwindcss.com/docs/align-items\n             */\n            'align-items': [{ items: ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Align Self\n             * @see https://tailwindcss.com/docs/align-self\n             */\n            'align-self': [{ self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline'] }],\n            /**\n             * Place Content\n             * @see https://tailwindcss.com/docs/place-content\n             */\n            'place-content': [{ 'place-content': [...getAlign(), 'stretch'] }],\n            /**\n             * Place Items\n             * @see https://tailwindcss.com/docs/place-items\n             */\n            'place-items': [{ 'place-items': ['start', 'end', 'center', 'stretch'] }],\n            /**\n             * Place Self\n             * @see https://tailwindcss.com/docs/place-self\n             */\n            'place-self': [{ 'place-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            // Spacing\n            /**\n             * Padding\n             * @see https://tailwindcss.com/docs/padding\n             */\n            p: [{ p: [padding] }],\n            /**\n             * Padding X\n             * @see https://tailwindcss.com/docs/padding\n             */\n            px: [{ px: [padding] }],\n            /**\n             * Padding Y\n             * @see https://tailwindcss.com/docs/padding\n             */\n            py: [{ py: [padding] }],\n            /**\n             * Padding Top\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pt: [{ pt: [padding] }],\n            /**\n             * Padding Right\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pr: [{ pr: [padding] }],\n            /**\n             * Padding Bottom\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pb: [{ pb: [padding] }],\n            /**\n             * Padding Left\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pl: [{ pl: [padding] }],\n            /**\n             * Margin\n             * @see https://tailwindcss.com/docs/margin\n             */\n            m: [{ m: [margin] }],\n            /**\n             * Margin X\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mx: [{ mx: [margin] }],\n            /**\n             * Margin Y\n             * @see https://tailwindcss.com/docs/margin\n             */\n            my: [{ my: [margin] }],\n            /**\n             * Margin Top\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mt: [{ mt: [margin] }],\n            /**\n             * Margin Right\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mr: [{ mr: [margin] }],\n            /**\n             * Margin Bottom\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mb: [{ mb: [margin] }],\n            /**\n             * Margin Left\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ml: [{ ml: [margin] }],\n            /**\n             * Space Between X\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x': [{ 'space-x': [space] }],\n            /**\n             * Space Between X Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x-reverse': ['space-x-reverse'],\n            /**\n             * Space Between Y\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y': [{ 'space-y': [space] }],\n            /**\n             * Space Between Y Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y-reverse': ['space-y-reverse'],\n            // Sizing\n            /**\n             * Width\n             * @see https://tailwindcss.com/docs/width\n             */\n            w: [{ w: ['auto', 'min', 'max', spacing] }],\n            /**\n             * Min-Width\n             * @see https://tailwindcss.com/docs/min-width\n             */\n            'min-w': [{ 'min-w': ['min', 'max', 'fit', isLength] }],\n            /**\n             * Max-Width\n             * @see https://tailwindcss.com/docs/max-width\n             */\n            'max-w': [\n                {\n                    'max-w': [\n                        '0',\n                        'none',\n                        'full',\n                        'min',\n                        'max',\n                        'fit',\n                        'prose',\n                        { screen: [isTshirtSize] },\n                        isTshirtSize,\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Height\n             * @see https://tailwindcss.com/docs/height\n             */\n            h: [{ h: getSpacingWithAuto() }],\n            /**\n             * Min-Height\n             * @see https://tailwindcss.com/docs/min-height\n             */\n            'min-h': [{ 'min-h': ['min', 'max', 'fit', isLength] }],\n            /**\n             * Max-Height\n             * @see https://tailwindcss.com/docs/max-height\n             */\n            'max-h': [{ 'max-h': [spacing, 'min', 'max', 'fit'] }],\n            // Typography\n            /**\n             * Font Size\n             * @see https://tailwindcss.com/docs/font-size\n             */\n            'font-size': [{ text: ['base', isTshirtSize, isArbitraryLength] }],\n            /**\n             * Font Smoothing\n             * @see https://tailwindcss.com/docs/font-smoothing\n             */\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n            /**\n             * Font Style\n             * @see https://tailwindcss.com/docs/font-style\n             */\n            'font-style': ['italic', 'not-italic'],\n            /**\n             * Font Weight\n             * @see https://tailwindcss.com/docs/font-weight\n             */\n            'font-weight': [\n                {\n                    font: [\n                        'thin',\n                        'extralight',\n                        'light',\n                        'normal',\n                        'medium',\n                        'semibold',\n                        'bold',\n                        'extrabold',\n                        'black',\n                        isArbitraryWeight,\n                    ],\n                },\n            ],\n            /**\n             * Font Family\n             * @see https://tailwindcss.com/docs/font-family\n             */\n            'font-family': [{ font: [isAny] }],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-normal': ['normal-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-ordinal': ['ordinal'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-slashed-zero': ['slashed-zero'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n            /**\n             * Letter Spacing\n             * @see https://tailwindcss.com/docs/letter-spacing\n             */\n            tracking: [\n                {\n                    tracking: [\n                        'tighter',\n                        'tight',\n                        'normal',\n                        'wide',\n                        'wider',\n                        'widest',\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Line Height\n             * @see https://tailwindcss.com/docs/line-height\n             */\n            leading: [\n                { leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength] },\n            ],\n            /**\n             * List Style Type\n             * @see https://tailwindcss.com/docs/list-style-type\n             */\n            'list-style-type': [{ list: ['none', 'disc', 'decimal', isArbitraryValue] }],\n            /**\n             * List Style Position\n             * @see https://tailwindcss.com/docs/list-style-position\n             */\n            'list-style-position': [{ list: ['inside', 'outside'] }],\n            /**\n             * Placeholder Color\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/placeholder-color\n             */\n            'placeholder-color': [{ placeholder: [colors] }],\n            /**\n             * Placeholder Opacity\n             * @see https://tailwindcss.com/docs/placeholder-opacity\n             */\n            'placeholder-opacity': [{ 'placeholder-opacity': [opacity] }],\n            /**\n             * Text Alignment\n             * @see https://tailwindcss.com/docs/text-align\n             */\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify'] }],\n            /**\n             * Text Color\n             * @see https://tailwindcss.com/docs/text-color\n             */\n            'text-color': [{ text: [colors] }],\n            /**\n             * Text Opacity\n             * @see https://tailwindcss.com/docs/text-opacity\n             */\n            'text-opacity': [{ 'text-opacity': [opacity] }],\n            /**\n             * Text Decoration\n             * @see https://tailwindcss.com/docs/text-decoration\n             */\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n            /**\n             * Text Decoration Style\n             * @see https://tailwindcss.com/docs/text-decoration-style\n             */\n            'text-decoration-style': [{ decoration: [...getLineStyles(), 'wavy'] }],\n            /**\n             * Text Decoration Thickness\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\n             */\n            'text-decoration-thickness': [{ decoration: ['auto', 'from-font', isLength] }],\n            /**\n             * Text Underline Offset\n             * @see https://tailwindcss.com/docs/text-underline-offset\n             */\n            'underline-offset': [{ 'underline-offset': ['auto', isLength] }],\n            /**\n             * Text Decoration Color\n             * @see https://tailwindcss.com/docs/text-decoration-color\n             */\n            'text-decoration-color': [{ decoration: [colors] }],\n            /**\n             * Text Transform\n             * @see https://tailwindcss.com/docs/text-transform\n             */\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n            /**\n             * Text Overflow\n             * @see https://tailwindcss.com/docs/text-overflow\n             */\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n            /**\n             * Text Indent\n             * @see https://tailwindcss.com/docs/text-indent\n             */\n            indent: [{ indent: [spacing] }],\n            /**\n             * Vertical Alignment\n             * @see https://tailwindcss.com/docs/vertical-align\n             */\n            'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Whitespace\n             * @see https://tailwindcss.com/docs/whitespace\n             */\n            whitespace: [{ whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap'] }],\n            /**\n             * Word Break\n             * @see https://tailwindcss.com/docs/word-break\n             */\n            break: [{ break: ['normal', 'words', 'all'] }],\n            /**\n             * Content\n             * @see https://tailwindcss.com/docs/content\n             */\n            content: [{ content: ['none', isArbitraryValue] }],\n            // Backgrounds\n            /**\n             * Background Attachment\n             * @see https://tailwindcss.com/docs/background-attachment\n             */\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\n            /**\n             * Background Clip\n             * @see https://tailwindcss.com/docs/background-clip\n             */\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\n            /**\n             * Background Opacity\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/background-opacity\n             */\n            'bg-opacity': [{ 'bg-opacity': [opacity] }],\n            /**\n             * Background Origin\n             * @see https://tailwindcss.com/docs/background-origin\n             */\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\n            /**\n             * Background Position\n             * @see https://tailwindcss.com/docs/background-position\n             */\n            'bg-position': [{ bg: [...getPositions(), isArbitraryPosition] }],\n            /**\n             * Background Repeat\n             * @see https://tailwindcss.com/docs/background-repeat\n             */\n            'bg-repeat': [{ bg: ['no-repeat', { repeat: ['', 'x', 'y', 'round', 'space'] }] }],\n            /**\n             * Background Size\n             * @see https://tailwindcss.com/docs/background-size\n             */\n            'bg-size': [{ bg: ['auto', 'cover', 'contain', isArbitrarySize] }],\n            /**\n             * Background Image\n             * @see https://tailwindcss.com/docs/background-image\n             */\n            'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        { 'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\n                        isArbitraryUrl,\n                    ],\n                },\n            ],\n            /**\n             * Background Color\n             * @see https://tailwindcss.com/docs/background-color\n             */\n            'bg-color': [{ bg: [colors] }],\n            /**\n             * Gradient Color Stops From\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from': [{ from: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops Via\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via': [{ via: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops To\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to': [{ to: [gradientColorStops] }],\n            // Borders\n            /**\n             * Border Radius\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            rounded: [{ rounded: [borderRadius] }],\n            /**\n             * Border Radius Top\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-t': [{ 'rounded-t': [borderRadius] }],\n            /**\n             * Border Radius Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-r': [{ 'rounded-r': [borderRadius] }],\n            /**\n             * Border Radius Bottom\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-b': [{ 'rounded-b': [borderRadius] }],\n            /**\n             * Border Radius Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-l': [{ 'rounded-l': [borderRadius] }],\n            /**\n             * Border Radius Top Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tl': [{ 'rounded-tl': [borderRadius] }],\n            /**\n             * Border Radius Top Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tr': [{ 'rounded-tr': [borderRadius] }],\n            /**\n             * Border Radius Bottom Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-br': [{ 'rounded-br': [borderRadius] }],\n            /**\n             * Border Radius Bottom Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-bl': [{ 'rounded-bl': [borderRadius] }],\n            /**\n             * Border Width\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w': [{ border: [borderWidth] }],\n            /**\n             * Border Width X\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-x': [{ 'border-x': [borderWidth] }],\n            /**\n             * Border Width Y\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-y': [{ 'border-y': [borderWidth] }],\n            /**\n             * Border Width Top\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-t': [{ 'border-t': [borderWidth] }],\n            /**\n             * Border Width Right\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-r': [{ 'border-r': [borderWidth] }],\n            /**\n             * Border Width Bottom\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-b': [{ 'border-b': [borderWidth] }],\n            /**\n             * Border Width Left\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-l': [{ 'border-l': [borderWidth] }],\n            /**\n             * Border Opacity\n             * @see https://tailwindcss.com/docs/border-opacity\n             */\n            'border-opacity': [{ 'border-opacity': [opacity] }],\n            /**\n             * Border Style\n             * @see https://tailwindcss.com/docs/border-style\n             */\n            'border-style': [{ border: [...getLineStyles(), 'hidden'] }],\n            /**\n             * Divide Width X\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x': [{ 'divide-x': [borderWidth] }],\n            /**\n             * Divide Width X Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x-reverse': ['divide-x-reverse'],\n            /**\n             * Divide Width Y\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y': [{ 'divide-y': [borderWidth] }],\n            /**\n             * Divide Width Y Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y-reverse': ['divide-y-reverse'],\n            /**\n             * Divide Opacity\n             * @see https://tailwindcss.com/docs/divide-opacity\n             */\n            'divide-opacity': [{ 'divide-opacity': [opacity] }],\n            /**\n             * Divide Style\n             * @see https://tailwindcss.com/docs/divide-style\n             */\n            'divide-style': [{ divide: getLineStyles() }],\n            /**\n             * Border Color\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color': [{ border: [borderColor] }],\n            /**\n             * Border Color X\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-x': [{ 'border-x': [borderColor] }],\n            /**\n             * Border Color Y\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-y': [{ 'border-y': [borderColor] }],\n            /**\n             * Border Color Top\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-t': [{ 'border-t': [borderColor] }],\n            /**\n             * Border Color Right\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-r': [{ 'border-r': [borderColor] }],\n            /**\n             * Border Color Bottom\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-b': [{ 'border-b': [borderColor] }],\n            /**\n             * Border Color Left\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-l': [{ 'border-l': [borderColor] }],\n            /**\n             * Divide Color\n             * @see https://tailwindcss.com/docs/divide-color\n             */\n            'divide-color': [{ divide: [borderColor] }],\n            /**\n             * Outline Style\n             * @see https://tailwindcss.com/docs/outline-style\n             */\n            'outline-style': [{ outline: ['', ...getLineStyles(), 'hidden'] }],\n            /**\n             * Outline Offset\n             * @see https://tailwindcss.com/docs/outline-offset\n             */\n            'outline-offset': [{ 'outline-offset': [isLength] }],\n            /**\n             * Outline Width\n             * @see https://tailwindcss.com/docs/outline-width\n             */\n            'outline-w': [{ outline: [isLength] }],\n            /**\n             * Outline Color\n             * @see https://tailwindcss.com/docs/outline-color\n             */\n            'outline-color': [{ outline: [colors] }],\n            /**\n             * Ring Width\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w': [{ ring: getLengthWithEmpty() }],\n            /**\n             * Ring Width Inset\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w-inset': ['ring-inset'],\n            /**\n             * Ring Color\n             * @see https://tailwindcss.com/docs/ring-color\n             */\n            'ring-color': [{ ring: [colors] }],\n            /**\n             * Ring Opacity\n             * @see https://tailwindcss.com/docs/ring-opacity\n             */\n            'ring-opacity': [{ 'ring-opacity': [opacity] }],\n            /**\n             * Ring Offset Width\n             * @see https://tailwindcss.com/docs/ring-offset-width\n             */\n            'ring-offset-w': [{ 'ring-offset': [isLength] }],\n            /**\n             * Ring Offset Color\n             * @see https://tailwindcss.com/docs/ring-offset-color\n             */\n            'ring-offset-color': [{ 'ring-offset': [colors] }],\n            // Effects\n            /**\n             * Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow\n             */\n            shadow: [{ shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow] }],\n            /**\n             * Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow-color\n             */\n            'shadow-color': [{ shadow: [isAny] }],\n            /**\n             * Opacity\n             * @see https://tailwindcss.com/docs/opacity\n             */\n            opacity: [{ opacity: [opacity] }],\n            /**\n             * Mix Beldn Mode\n             * @see https://tailwindcss.com/docs/mix-blend-mode\n             */\n            'mix-blend': [{ 'mix-blend': getBlendModes() }],\n            /**\n             * Background Blend Mode\n             * @see https://tailwindcss.com/docs/background-blend-mode\n             */\n            'bg-blend': [{ 'bg-blend': getBlendModes() }],\n            // Filters\n            /**\n             * Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/filter\n             */\n            filter: [{ filter: ['', 'none'] }],\n            /**\n             * Blur\n             * @see https://tailwindcss.com/docs/blur\n             */\n            blur: [{ blur: [blur] }],\n            /**\n             * Brightness\n             * @see https://tailwindcss.com/docs/brightness\n             */\n            brightness: [{ brightness: [brightness] }],\n            /**\n             * Contrast\n             * @see https://tailwindcss.com/docs/contrast\n             */\n            contrast: [{ contrast: [contrast] }],\n            /**\n             * Drop Shadow\n             * @see https://tailwindcss.com/docs/drop-shadow\n             */\n            'drop-shadow': [{ 'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue] }],\n            /**\n             * Grayscale\n             * @see https://tailwindcss.com/docs/grayscale\n             */\n            grayscale: [{ grayscale: [grayscale] }],\n            /**\n             * Hue Rotate\n             * @see https://tailwindcss.com/docs/hue-rotate\n             */\n            'hue-rotate': [{ 'hue-rotate': [hueRotate] }],\n            /**\n             * Invert\n             * @see https://tailwindcss.com/docs/invert\n             */\n            invert: [{ invert: [invert] }],\n            /**\n             * Saturate\n             * @see https://tailwindcss.com/docs/saturate\n             */\n            saturate: [{ saturate: [saturate] }],\n            /**\n             * Sepia\n             * @see https://tailwindcss.com/docs/sepia\n             */\n            sepia: [{ sepia: [sepia] }],\n            /**\n             * Backdrop Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/backdrop-filter\n             */\n            'backdrop-filter': [{ 'backdrop-filter': ['', 'none'] }],\n            /**\n             * Backdrop Blur\n             * @see https://tailwindcss.com/docs/backdrop-blur\n             */\n            'backdrop-blur': [{ 'backdrop-blur': [blur] }],\n            /**\n             * Backdrop Brightness\n             * @see https://tailwindcss.com/docs/backdrop-brightness\n             */\n            'backdrop-brightness': [{ 'backdrop-brightness': [brightness] }],\n            /**\n             * Backdrop Contrast\n             * @see https://tailwindcss.com/docs/backdrop-contrast\n             */\n            'backdrop-contrast': [{ 'backdrop-contrast': [contrast] }],\n            /**\n             * Backdrop Grayscale\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\n             */\n            'backdrop-grayscale': [{ 'backdrop-grayscale': [grayscale] }],\n            /**\n             * Backdrop Hue Rotate\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n             */\n            'backdrop-hue-rotate': [{ 'backdrop-hue-rotate': [hueRotate] }],\n            /**\n             * Backdrop Invert\n             * @see https://tailwindcss.com/docs/backdrop-invert\n             */\n            'backdrop-invert': [{ 'backdrop-invert': [invert] }],\n            /**\n             * Backdrop Opacity\n             * @see https://tailwindcss.com/docs/backdrop-opacity\n             */\n            'backdrop-opacity': [{ 'backdrop-opacity': [opacity] }],\n            /**\n             * Backdrop Saturate\n             * @see https://tailwindcss.com/docs/backdrop-saturate\n             */\n            'backdrop-saturate': [{ 'backdrop-saturate': [saturate] }],\n            /**\n             * Backdrop Sepia\n             * @see https://tailwindcss.com/docs/backdrop-sepia\n             */\n            'backdrop-sepia': [{ 'backdrop-sepia': [sepia] }],\n            // Tables\n            /**\n             * Border Collapse\n             * @see https://tailwindcss.com/docs/border-collapse\n             */\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\n            /**\n             * Table Layout\n             * @see https://tailwindcss.com/docs/table-layout\n             */\n            'table-layout': [{ table: ['auto', 'fixed'] }],\n            // Transitions and Animation\n            /**\n             * Tranisition Property\n             * @see https://tailwindcss.com/docs/transition-property\n             */\n            transition: [\n                {\n                    transition: [\n                        'none',\n                        'all',\n                        '',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Transition Duration\n             * @see https://tailwindcss.com/docs/transition-duration\n             */\n            duration: [{ duration: [isInteger] }],\n            /**\n             * Transition Timing Function\n             * @see https://tailwindcss.com/docs/transition-timing-function\n             */\n            ease: [{ ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue] }],\n            /**\n             * Transition Delay\n             * @see https://tailwindcss.com/docs/transition-delay\n             */\n            delay: [{ delay: [isInteger] }],\n            /**\n             * Animation\n             * @see https://tailwindcss.com/docs/animation\n             */\n            animate: [{ animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue] }],\n            // Transforms\n            /**\n             * Transform\n             * @see https://tailwindcss.com/docs/transform\n             */\n            transform: [{ transform: ['', 'gpu', 'none'] }],\n            /**\n             * Scale\n             * @see https://tailwindcss.com/docs/scale\n             */\n            scale: [{ scale: [scale] }],\n            /**\n             * Scale X\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-x': [{ 'scale-x': [scale] }],\n            /**\n             * Scale Y\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-y': [{ 'scale-y': [scale] }],\n            /**\n             * Rotate\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            rotate: [{ rotate: [isInteger, isArbitraryValue] }],\n            /**\n             * Translate X\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-x': [{ 'translate-x': [translate] }],\n            /**\n             * Translate Y\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-y': [{ 'translate-y': [translate] }],\n            /**\n             * Skew X\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-x': [{ 'skew-x': [skew] }],\n            /**\n             * Skew Y\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-y': [{ 'skew-y': [skew] }],\n            /**\n             * Transform Origin\n             * @see https://tailwindcss.com/docs/transform-origin\n             */\n            'transform-origin': [\n                {\n                    origin: [\n                        'center',\n                        'top',\n                        'top-right',\n                        'right',\n                        'bottom-right',\n                        'bottom',\n                        'bottom-left',\n                        'left',\n                        'top-left',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            // Interactivity\n            /**\n             * Accent Color\n             * @see https://tailwindcss.com/docs/accent-color\n             */\n            accent: [{ accent: ['auto', colors] }],\n            /**\n             * Appearance\n             * @see https://tailwindcss.com/docs/appearance\n             */\n            appearance: ['appearance-none'],\n            /**\n             * Cursor\n             * @see https://tailwindcss.com/docs/cursor\n             */\n            cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Caret Color\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n             */\n            'caret-color': [{ caret: [colors] }],\n            /**\n             * Pointer Events\n             * @see https://tailwindcss.com/docs/pointer-events\n             */\n            'pointer-events': [{ 'pointer-events': ['none', 'auto'] }],\n            /**\n             * Resize\n             * @see https://tailwindcss.com/docs/resize\n             */\n            resize: [{ resize: ['none', 'y', 'x', ''] }],\n            /**\n             * Scroll Behavior\n             * @see https://tailwindcss.com/docs/scroll-behavior\n             */\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\n            /**\n             * Scroll Margin\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-m': [{ 'scroll-m': [spacing] }],\n            /**\n             * Scroll Margin X\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mx': [{ 'scroll-mx': [spacing] }],\n            /**\n             * Scroll Margin Y\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-my': [{ 'scroll-my': [spacing] }],\n            /**\n             * Scroll Margin Top\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mt': [{ 'scroll-mt': [spacing] }],\n            /**\n             * Scroll Margin Right\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mr': [{ 'scroll-mr': [spacing] }],\n            /**\n             * Scroll Margin Bottom\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mb': [{ 'scroll-mb': [spacing] }],\n            /**\n             * Scroll Margin Left\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ml': [{ 'scroll-ml': [spacing] }],\n            /**\n             * Scroll Padding\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-p': [{ 'scroll-p': [spacing] }],\n            /**\n             * Scroll Padding X\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-px': [{ 'scroll-px': [spacing] }],\n            /**\n             * Scroll Padding Y\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-py': [{ 'scroll-py': [spacing] }],\n            /**\n             * Scroll Padding Top\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pt': [{ 'scroll-pt': [spacing] }],\n            /**\n             * Scroll Padding Right\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pr': [{ 'scroll-pr': [spacing] }],\n            /**\n             * Scroll Padding Bottom\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pb': [{ 'scroll-pb': [spacing] }],\n            /**\n             * Scroll Padding Left\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pl': [{ 'scroll-pl': [spacing] }],\n            /**\n             * Scroll Snap Align\n             * @see https://tailwindcss.com/docs/scroll-snap-align\n             */\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\n            /**\n             * Scroll Snap Stop\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\n             */\n            'snap-stop': [{ snap: ['normal', 'always'] }],\n            /**\n             * Scroll Snap Type\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\n            /**\n             * Scroll Snap Type Strictness\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\n            /**\n             * Touch Action\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            touch: [\n                {\n                    touch: [\n                        'auto',\n                        'none',\n                        'pinch-zoom',\n                        'manipulation',\n                        { pan: ['x', 'left', 'right', 'y', 'up', 'down'] },\n                    ],\n                },\n            ],\n            /**\n             * User Select\n             * @see https://tailwindcss.com/docs/user-select\n             */\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\n            /**\n             * Will Change\n             * @see https://tailwindcss.com/docs/will-change\n             */\n            'will-change': [\n                { 'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue] },\n            ],\n            // SVG\n            /**\n             * Fill\n             * @see https://tailwindcss.com/docs/fill\n             */\n            fill: [{ fill: [colors] }],\n            /**\n             * Stroke Width\n             * @see https://tailwindcss.com/docs/stroke-width\n             */\n            'stroke-w': [{ stroke: [isLength] }],\n            /**\n             * Stroke\n             * @see https://tailwindcss.com/docs/stroke\n             */\n            stroke: [{ stroke: [colors] }],\n            // Accessibility\n            /**\n             * Screen Readers\n             * @see https://tailwindcss.com/docs/screen-readers\n             */\n            sr: ['sr-only', 'not-sr-only'],\n        },\n        conflictingClassGroups: {\n            overflow: ['overflow-x', 'overflow-y'],\n            overscroll: ['overscroll-x', 'overscroll-y'],\n            inset: ['inset-x', 'inset-y', 'top', 'right', 'bottom', 'left'],\n            'inset-x': ['right', 'left'],\n            'inset-y': ['top', 'bottom'],\n            flex: ['basis', 'grow', 'shrink'],\n            'col-start-end': ['col-start', 'col-end'],\n            'row-start-end': ['row-start', 'row-end'],\n            gap: ['gap-x', 'gap-y'],\n            p: ['px', 'py', 'pt', 'pr', 'pb', 'pl'],\n            px: ['pr', 'pl'],\n            py: ['pt', 'pb'],\n            m: ['mx', 'my', 'mt', 'mr', 'mb', 'ml'],\n            mx: ['mr', 'ml'],\n            my: ['mt', 'mb'],\n            'font-size': ['leading'],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction',\n            ],\n            'fvn-ordinal': ['fvn-normal'],\n            'fvn-slashed-zero': ['fvn-normal'],\n            'fvn-figure': ['fvn-normal'],\n            'fvn-spacing': ['fvn-normal'],\n            'fvn-fraction': ['fvn-normal'],\n            rounded: [\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl',\n            ],\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\n            'rounded-r': ['rounded-tr', 'rounded-br'],\n            'rounded-b': ['rounded-br', 'rounded-bl'],\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\n            'border-w': ['border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n            'border-w-x': ['border-w-r', 'border-w-l'],\n            'border-w-y': ['border-w-t', 'border-w-b'],\n            'border-color': [\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l',\n            ],\n            'border-color-x': ['border-color-r', 'border-color-l'],\n            'border-color-y': ['border-color-t', 'border-color-b'],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml',\n            ],\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl',\n            ],\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\n        },\n    } as const\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\n\nexport const twMerge = createTailwindMerge(getDefaultConfig)\n","import { Config } from './types'\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nexport function mergeConfigs(baseConfig: Config, configExtension: Partial<Config>) {\n    for (const key in configExtension) {\n        mergePropertyRecursively(baseConfig as any, key, configExtension[key as keyof Config])\n    }\n\n    return baseConfig\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nconst overrideTypes = new Set(['string', 'number', 'boolean'])\n\nfunction mergePropertyRecursively(\n    baseObject: Record<string, unknown>,\n    mergeKey: string,\n    mergeValue: unknown\n) {\n    if (\n        !hasOwnProperty.call(baseObject, mergeKey) ||\n        overrideTypes.has(typeof mergeValue) ||\n        mergeValue === null\n    ) {\n        baseObject[mergeKey] = mergeValue\n        return\n    }\n\n    if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {\n        baseObject[mergeKey] = (baseObject[mergeKey] as unknown[]).concat(mergeValue)\n        return\n    }\n\n    if (typeof mergeValue === 'object' && typeof baseObject[mergeKey] === 'object') {\n        if (baseObject[mergeKey] === null) {\n            baseObject[mergeKey] = mergeValue\n            return\n        }\n\n        for (const nextKey in mergeValue) {\n            mergePropertyRecursively(\n                baseObject[mergeKey] as Record<string, unknown>,\n                nextKey,\n                mergeValue[nextKey as keyof object]\n            )\n        }\n    }\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\nimport { mergeConfigs } from './merge-configs'\nimport { Config } from './types'\n\ntype CreateConfigSubsequent = (config: Config) => Config\n\nexport function extendTailwindMerge(\n    configExtension: Partial<Config> | CreateConfigSubsequent,\n    ...createConfig: CreateConfigSubsequent[]\n) {\n    return typeof configExtension === 'function'\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\n        : createTailwindMerge(\n              () => mergeConfigs(getDefaultConfig(), configExtension),\n              ...createConfig\n          )\n}\n"]},"metadata":{},"sourceType":"script"}