{"ast":null,"code":"\"use strict\";\n\nfunction r(r) {\n  return r && \"object\" == typeof r && \"default\" in r ? r : {\n    default: r\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar e = r(require(\"hashlru\"));\n\nfunction o() {\n  return o = Object.assign || function (r) {\n    for (var e = 1; e < arguments.length; e++) {\n      var o = arguments[e];\n\n      for (var t in o) {\n        Object.prototype.hasOwnProperty.call(o, t) && (r[t] = o[t]);\n      }\n    }\n\n    return r;\n  }, o.apply(this, arguments);\n}\n\nfunction t(r) {\n  var e = function (r) {\n    var e = r.theme,\n        o = r.prefix,\n        t = {\n      nextPart: {},\n      validators: []\n    };\n    return function (r, e) {\n      return e ? r.map(function (r) {\n        return [r[0], r[1].map(function (r) {\n          return \"string\" == typeof r ? e + r : \"object\" == typeof r ? Object.fromEntries(Object.entries(r).map(function (r) {\n            return [e + r[0], r[1]];\n          })) : r;\n        })];\n      }) : r;\n    }(Object.entries(r.classGroups), o).forEach(function (r) {\n      i(r[1], t, r[0], e);\n    }), t;\n  }(r);\n\n  return {\n    getClassGroupId: function getClassGroupId(r) {\n      var o = r.split(\"-\");\n      return \"\" === o[0] && 1 !== o.length && o.shift(), n(o, e) || function (r) {\n        if (l.test(r)) {\n          var e = l.exec(r)[1],\n              o = null == e ? void 0 : e.substring(0, e.indexOf(\":\"));\n          if (o) return \"arbitrary..\" + o;\n        }\n      }(r);\n    },\n    getConflictingClassGroupIds: function getConflictingClassGroupIds(e) {\n      return r.conflictingClassGroups[e] || [];\n    }\n  };\n}\n\nfunction n(r, e) {\n  var o;\n  if (0 === r.length) return e.classGroupId;\n  var t = e.nextPart[r[0]],\n      l = t ? n(r.slice(1), t) : void 0;\n  if (l) return l;\n\n  if (0 !== e.validators.length) {\n    var i = r.join(\"-\");\n    return null == (o = e.validators.find(function (r) {\n      return (0, r.validator)(i);\n    })) ? void 0 : o.classGroupId;\n  }\n}\n\nvar l = /^\\[(.+)\\]$/;\n\nfunction i(r, e, o, t) {\n  r.forEach(function (r) {\n    if (\"string\" != typeof r) {\n      if (\"function\" == typeof r) return r.isThemeGetter ? void i(r(t), e, o, t) : void e.validators.push({\n        validator: r,\n        classGroupId: o\n      });\n      Object.entries(r).forEach(function (r) {\n        i(r[1], a(e, r[0]), o, t);\n      });\n    } else (\"\" === r ? e : a(e, r)).classGroupId = o;\n  });\n}\n\nfunction a(r, e) {\n  var o = r;\n  return e.split(\"-\").forEach(function (r) {\n    void 0 === o.nextPart[r] && (o.nextPart[r] = {\n      nextPart: {},\n      validators: []\n    }), o = o.nextPart[r];\n  }), o;\n}\n\nfunction s(r) {\n  return o({\n    cache: (n = r.cacheSize, n >= 1 ? e.default(n) : {\n      get: function get() {},\n      set: function set() {}\n    })\n  }, t(r));\n  var n;\n}\n\nvar c = /\\s+/,\n    d = /:(?![^[]*\\])/;\n\nfunction u(r, e) {\n  var o = e.getClassGroupId,\n      t = e.getConflictingClassGroupIds,\n      n = new Set();\n  return r.trim().split(c).map(function (r) {\n    var e = r.split(d),\n        t = e.pop(),\n        n = t.startsWith(\"!\"),\n        l = n ? t.substring(1) : t,\n        i = o(l);\n    if (!i) return {\n      isTailwindClass: !1,\n      originalClassName: r\n    };\n    var a = 0 === e.length ? \"\" : e.sort().concat(\"\").join(\":\");\n    return {\n      isTailwindClass: !0,\n      modifier: n ? \"!\" + a : a,\n      classGroupId: i,\n      originalClassName: r\n    };\n  }).reverse().filter(function (r) {\n    if (!r.isTailwindClass) return !0;\n    var e = r.modifier,\n        o = r.classGroupId,\n        l = e + \":\" + o;\n    return !n.has(l) && (n.add(l), t(o).forEach(function (r) {\n      return n.add(e + \":\" + r);\n    }), !0);\n  }).reverse().map(function (r) {\n    return r.originalClassName;\n  }).join(\" \");\n}\n\nfunction p() {\n  for (var r = arguments.length, e = new Array(r), o = 0; o < r; o++) {\n    e[o] = arguments[o];\n  }\n\n  var t,\n      n,\n      l,\n      i = a;\n\n  function a(r) {\n    var o = e[0],\n        a = e.slice(1).reduce(function (r, e) {\n      return e(r);\n    }, o());\n    return t = s(a), n = t.cache.get, l = t.cache.set, i = c, c(r);\n  }\n\n  function c(r) {\n    var e = n(r);\n    if (e) return e;\n    var o = u(r, t);\n    return l(r, o), o;\n  }\n\n  return function () {\n    for (var r, e = \"\", o = 0; o < arguments.length; o += 1) {\n      (r = arguments[o]) && (e && (e += \" \"), e += r);\n    }\n\n    return i(e);\n  };\n}\n\nfunction b(r) {\n  var e = function e(_e) {\n    return _e[r] || [];\n  };\n\n  return e.isThemeGetter = !0, e;\n}\n\nvar f = /^\\[(.+)\\]$/,\n    m = /^\\d+\\/\\d+$/,\n    g = new Set([\"px\", \"full\", \"screen\"]),\n    v = /^(\\d+)?(xs|sm|md|lg|xl)$/,\n    h = /\\d+(%|px|em|rem|vh|vw|pt|pc|in|cm|mm|cap|ch|ex|lh|rlh|vi|vb|vmin|vmax)/,\n    y = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\n\nfunction x(r) {\n  return !Number.isNaN(Number(r)) || g.has(r) || m.test(r) || w(r);\n}\n\nfunction w(r) {\n  var e,\n      o = null == (e = f.exec(r)) ? void 0 : e[1];\n  return !!o && (o.startsWith(\"length:\") || h.test(o));\n}\n\nfunction k(r) {\n  var e,\n      o = null == (e = f.exec(r)) ? void 0 : e[1];\n  return !!o && o.startsWith(\"size:\");\n}\n\nfunction z(r) {\n  var e,\n      o = null == (e = f.exec(r)) ? void 0 : e[1];\n  return !!o && o.startsWith(\"position:\");\n}\n\nfunction j(r) {\n  var e,\n      o = null == (e = f.exec(r)) ? void 0 : e[1];\n  return !!o && (o.startsWith(\"url(\") || o.startsWith(\"url:\"));\n}\n\nfunction C(r) {\n  var e,\n      o = null == (e = f.exec(r)) ? void 0 : e[1];\n  return !!o && (!Number.isNaN(Number(o)) || o.startsWith(\"number:\"));\n}\n\nfunction G(r) {\n  var e,\n      o = null == (e = f.exec(r)) ? void 0 : e[1];\n  return Number.isInteger(Number(o || r));\n}\n\nfunction A(r) {\n  return f.test(r);\n}\n\nfunction N() {\n  return !0;\n}\n\nfunction I(r) {\n  return v.test(r);\n}\n\nfunction O(r) {\n  var e,\n      o = null == (e = f.exec(r)) ? void 0 : e[1];\n  return !!o && y.test(o);\n}\n\nvar P = {\n  __proto__: null,\n  isLength: x,\n  isArbitraryLength: w,\n  isArbitrarySize: k,\n  isArbitraryPosition: z,\n  isArbitraryUrl: j,\n  isArbitraryWeight: C,\n  isInteger: G,\n  isArbitraryValue: A,\n  isAny: N,\n  isTshirtSize: I,\n  isArbitraryShadow: O\n};\n\nfunction S() {\n  var r = b(\"colors\"),\n      e = b(\"spacing\"),\n      o = b(\"blur\"),\n      t = b(\"brightness\"),\n      n = b(\"borderColor\"),\n      l = b(\"borderRadius\"),\n      i = b(\"borderWidth\"),\n      a = b(\"contrast\"),\n      s = b(\"grayscale\"),\n      c = b(\"hueRotate\"),\n      d = b(\"invert\"),\n      u = b(\"gap\"),\n      p = b(\"gradientColorStops\"),\n      f = b(\"inset\"),\n      m = b(\"margin\"),\n      g = b(\"opacity\"),\n      v = b(\"padding\"),\n      h = b(\"saturate\"),\n      y = b(\"scale\"),\n      P = b(\"sepia\"),\n      S = b(\"skew\"),\n      W = b(\"space\"),\n      T = b(\"translate\"),\n      _ = function _() {\n    return [\"auto\", e];\n  },\n      E = function E() {\n    return [\"\", x];\n  },\n      M = function M() {\n    return [\"auto\", G];\n  },\n      R = function R() {\n    return [\"\", \"0\", A];\n  };\n\n  return {\n    cacheSize: 500,\n    theme: {\n      colors: [N],\n      spacing: [x],\n      blur: [\"none\", \"\", I, w],\n      brightness: [G],\n      borderColor: [r],\n      borderRadius: [\"none\", \"\", \"full\", I, w],\n      borderWidth: E(),\n      contrast: [G],\n      grayscale: R(),\n      hueRotate: [G],\n      invert: R(),\n      gap: [e],\n      gradientColorStops: [r],\n      inset: _(),\n      margin: _(),\n      opacity: [G],\n      padding: [e],\n      saturate: [G],\n      scale: [G],\n      sepia: R(),\n      skew: [G, A],\n      space: [e],\n      translate: [e]\n    },\n    classGroups: {\n      aspect: [{\n        aspect: [\"auto\", \"square\", \"video\", A]\n      }],\n      container: [\"container\"],\n      columns: [{\n        columns: [I]\n      }],\n      \"break-after\": [{\n        \"break-after\": [\"auto\", \"avoid\", \"all\", \"avoid-page\", \"page\", \"left\", \"right\", \"column\"]\n      }],\n      \"break-before\": [{\n        \"break-before\": [\"auto\", \"avoid\", \"all\", \"avoid-page\", \"page\", \"left\", \"right\", \"column\"]\n      }],\n      \"break-inside\": [{\n        \"break-inside\": [\"auto\", \"avoid\", \"avoid-page\", \"avoid-column\"]\n      }],\n      \"box-decoration\": [{\n        \"box-decoration\": [\"slice\", \"clone\"]\n      }],\n      box: [{\n        box: [\"border\", \"content\"]\n      }],\n      display: [\"block\", \"inline-block\", \"inline\", \"flex\", \"inline-flex\", \"table\", \"inline-table\", \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\", \"table-footer-group\", \"table-header-group\", \"table-row-group\", \"table-row\", \"flow-root\", \"grid\", \"inline-grid\", \"contents\", \"list-item\", \"hidden\"],\n      float: [{\n        float: [\"right\", \"left\", \"none\"]\n      }],\n      clear: [{\n        clear: [\"left\", \"right\", \"both\", \"none\"]\n      }],\n      isolation: [\"isolate\", \"isolation-auto\"],\n      \"object-fit\": [{\n        object: [\"contain\", \"cover\", \"fill\", \"none\", \"scale-down\"]\n      }],\n      \"object-position\": [{\n        object: [].concat([\"bottom\", \"center\", \"left\", \"left-bottom\", \"left-top\", \"right\", \"right-bottom\", \"right-top\", \"top\"], [A])\n      }],\n      overflow: [{\n        overflow: [\"auto\", \"hidden\", \"clip\", \"visible\", \"scroll\"]\n      }],\n      \"overflow-x\": [{\n        \"overflow-x\": [\"auto\", \"hidden\", \"clip\", \"visible\", \"scroll\"]\n      }],\n      \"overflow-y\": [{\n        \"overflow-y\": [\"auto\", \"hidden\", \"clip\", \"visible\", \"scroll\"]\n      }],\n      overscroll: [{\n        overscroll: [\"auto\", \"contain\", \"none\"]\n      }],\n      \"overscroll-x\": [{\n        \"overscroll-x\": [\"auto\", \"contain\", \"none\"]\n      }],\n      \"overscroll-y\": [{\n        \"overscroll-y\": [\"auto\", \"contain\", \"none\"]\n      }],\n      position: [\"static\", \"fixed\", \"absolute\", \"relative\", \"sticky\"],\n      inset: [{\n        inset: [f]\n      }],\n      \"inset-x\": [{\n        \"inset-x\": [f]\n      }],\n      \"inset-y\": [{\n        \"inset-y\": [f]\n      }],\n      top: [{\n        top: [f]\n      }],\n      right: [{\n        right: [f]\n      }],\n      bottom: [{\n        bottom: [f]\n      }],\n      left: [{\n        left: [f]\n      }],\n      visibility: [\"visible\", \"invisible\"],\n      z: [{\n        z: [x]\n      }],\n      basis: [{\n        basis: [e]\n      }],\n      \"flex-direction\": [{\n        flex: [\"row\", \"row-reverse\", \"col\", \"col-reverse\"]\n      }],\n      \"flex-wrap\": [{\n        flex: [\"wrap\", \"wrap-reverse\", \"nowrap\"]\n      }],\n      flex: [{\n        flex: [\"1\", \"auto\", \"initial\", \"none\", A]\n      }],\n      grow: [{\n        grow: R()\n      }],\n      shrink: [{\n        shrink: R()\n      }],\n      order: [{\n        order: [\"first\", \"last\", \"none\", G]\n      }],\n      \"grid-cols\": [{\n        \"grid-cols\": [N]\n      }],\n      \"col-start-end\": [{\n        col: [\"auto\", {\n          span: [G]\n        }]\n      }],\n      \"col-start\": [{\n        \"col-start\": M()\n      }],\n      \"col-end\": [{\n        \"col-end\": M()\n      }],\n      \"grid-rows\": [{\n        \"grid-rows\": [N]\n      }],\n      \"row-start-end\": [{\n        row: [\"auto\", {\n          span: [G]\n        }]\n      }],\n      \"row-start\": [{\n        \"row-start\": M()\n      }],\n      \"row-end\": [{\n        \"row-end\": M()\n      }],\n      \"grid-flow\": [{\n        \"grid-flow\": [\"row\", \"col\", \"row-dense\", \"col-dense\"]\n      }],\n      \"auto-cols\": [{\n        \"auto-cols\": [\"auto\", \"min\", \"max\", \"fr\", A]\n      }],\n      \"auto-rows\": [{\n        \"auto-rows\": [\"auto\", \"min\", \"max\", \"fr\", A]\n      }],\n      gap: [{\n        gap: [u]\n      }],\n      \"gap-x\": [{\n        \"gap-x\": [u]\n      }],\n      \"gap-y\": [{\n        \"gap-y\": [u]\n      }],\n      \"justify-content\": [{\n        justify: [\"start\", \"end\", \"center\", \"between\", \"around\", \"evenly\"]\n      }],\n      \"justify-items\": [{\n        \"justify-items\": [\"start\", \"end\", \"center\", \"stretch\"]\n      }],\n      \"justify-self\": [{\n        \"justify-self\": [\"auto\", \"start\", \"end\", \"center\", \"stretch\"]\n      }],\n      \"align-content\": [{\n        content: [\"start\", \"end\", \"center\", \"between\", \"around\", \"evenly\"]\n      }],\n      \"align-items\": [{\n        items: [\"start\", \"end\", \"center\", \"baseline\", \"stretch\"]\n      }],\n      \"align-self\": [{\n        self: [\"auto\", \"start\", \"end\", \"center\", \"stretch\", \"baseline\"]\n      }],\n      \"place-content\": [{\n        \"place-content\": [].concat([\"start\", \"end\", \"center\", \"between\", \"around\", \"evenly\"], [\"stretch\"])\n      }],\n      \"place-items\": [{\n        \"place-items\": [\"start\", \"end\", \"center\", \"stretch\"]\n      }],\n      \"place-self\": [{\n        \"place-self\": [\"auto\", \"start\", \"end\", \"center\", \"stretch\"]\n      }],\n      p: [{\n        p: [v]\n      }],\n      px: [{\n        px: [v]\n      }],\n      py: [{\n        py: [v]\n      }],\n      pt: [{\n        pt: [v]\n      }],\n      pr: [{\n        pr: [v]\n      }],\n      pb: [{\n        pb: [v]\n      }],\n      pl: [{\n        pl: [v]\n      }],\n      m: [{\n        m: [m]\n      }],\n      mx: [{\n        mx: [m]\n      }],\n      my: [{\n        my: [m]\n      }],\n      mt: [{\n        mt: [m]\n      }],\n      mr: [{\n        mr: [m]\n      }],\n      mb: [{\n        mb: [m]\n      }],\n      ml: [{\n        ml: [m]\n      }],\n      \"space-x\": [{\n        \"space-x\": [W]\n      }],\n      \"space-x-reverse\": [\"space-x-reverse\"],\n      \"space-y\": [{\n        \"space-y\": [W]\n      }],\n      \"space-y-reverse\": [\"space-y-reverse\"],\n      w: [{\n        w: [\"auto\", \"min\", \"max\", e]\n      }],\n      \"min-w\": [{\n        \"min-w\": [\"min\", \"max\", \"fit\", x]\n      }],\n      \"max-w\": [{\n        \"max-w\": [\"0\", \"none\", \"full\", \"min\", \"max\", \"fit\", \"prose\", {\n          screen: [I]\n        }, I, w]\n      }],\n      h: [{\n        h: _()\n      }],\n      \"min-h\": [{\n        \"min-h\": [\"min\", \"max\", \"fit\", x]\n      }],\n      \"max-h\": [{\n        \"max-h\": [e, \"min\", \"max\", \"fit\"]\n      }],\n      \"font-size\": [{\n        text: [\"base\", I, w]\n      }],\n      \"font-smoothing\": [\"antialiased\", \"subpixel-antialiased\"],\n      \"font-style\": [\"italic\", \"not-italic\"],\n      \"font-weight\": [{\n        font: [\"thin\", \"extralight\", \"light\", \"normal\", \"medium\", \"semibold\", \"bold\", \"extrabold\", \"black\", C]\n      }],\n      \"font-family\": [{\n        font: [N]\n      }],\n      \"fvn-normal\": [\"normal-nums\"],\n      \"fvn-ordinal\": [\"ordinal\"],\n      \"fvn-slashed-zero\": [\"slashed-zero\"],\n      \"fvn-figure\": [\"lining-nums\", \"oldstyle-nums\"],\n      \"fvn-spacing\": [\"proportional-nums\", \"tabular-nums\"],\n      \"fvn-fraction\": [\"diagonal-fractions\", \"stacked-fractons\"],\n      tracking: [{\n        tracking: [\"tighter\", \"tight\", \"normal\", \"wide\", \"wider\", \"widest\", w]\n      }],\n      leading: [{\n        leading: [\"none\", \"tight\", \"snug\", \"normal\", \"relaxed\", \"loose\", x]\n      }],\n      \"list-style-type\": [{\n        list: [\"none\", \"disc\", \"decimal\", A]\n      }],\n      \"list-style-position\": [{\n        list: [\"inside\", \"outside\"]\n      }],\n      \"placeholder-color\": [{\n        placeholder: [r]\n      }],\n      \"placeholder-opacity\": [{\n        \"placeholder-opacity\": [g]\n      }],\n      \"text-alignment\": [{\n        text: [\"left\", \"center\", \"right\", \"justify\"]\n      }],\n      \"text-color\": [{\n        text: [r]\n      }],\n      \"text-opacity\": [{\n        \"text-opacity\": [g]\n      }],\n      \"text-decoration\": [\"underline\", \"overline\", \"line-through\", \"no-underline\"],\n      \"text-decoration-style\": [{\n        decoration: [].concat([\"solid\", \"dashed\", \"dotted\", \"double\", \"none\"], [\"wavy\"])\n      }],\n      \"text-decoration-thickness\": [{\n        decoration: [\"auto\", \"from-font\", x]\n      }],\n      \"underline-offset\": [{\n        \"underline-offset\": [\"auto\", x]\n      }],\n      \"text-decoration-color\": [{\n        decoration: [r]\n      }],\n      \"text-transform\": [\"uppercase\", \"lowercase\", \"capitalize\", \"normal-case\"],\n      \"text-overflow\": [\"truncate\", \"text-ellipsis\", \"text-clip\"],\n      indent: [{\n        indent: [e]\n      }],\n      \"vertical-align\": [{\n        align: [\"baseline\", \"top\", \"middle\", \"bottom\", \"text-top\", \"text-bottom\", \"sub\", \"super\", w]\n      }],\n      whitespace: [{\n        whitespace: [\"normal\", \"nowrap\", \"pre\", \"pre-line\", \"pre-wrap\"]\n      }],\n      break: [{\n        break: [\"normal\", \"words\", \"all\"]\n      }],\n      content: [{\n        content: [\"none\", A]\n      }],\n      \"bg-attachment\": [{\n        bg: [\"fixed\", \"local\", \"scroll\"]\n      }],\n      \"bg-clip\": [{\n        \"bg-clip\": [\"border\", \"padding\", \"content\", \"text\"]\n      }],\n      \"bg-opacity\": [{\n        \"bg-opacity\": [g]\n      }],\n      \"bg-origin\": [{\n        \"bg-origin\": [\"border\", \"padding\", \"content\"]\n      }],\n      \"bg-position\": [{\n        bg: [].concat([\"bottom\", \"center\", \"left\", \"left-bottom\", \"left-top\", \"right\", \"right-bottom\", \"right-top\", \"top\"], [z])\n      }],\n      \"bg-repeat\": [{\n        bg: [\"no-repeat\", {\n          repeat: [\"\", \"x\", \"y\", \"round\", \"space\"]\n        }]\n      }],\n      \"bg-size\": [{\n        bg: [\"auto\", \"cover\", \"contain\", k]\n      }],\n      \"bg-image\": [{\n        bg: [\"none\", {\n          \"gradient-to\": [\"t\", \"tr\", \"r\", \"br\", \"b\", \"bl\", \"l\", \"tl\"]\n        }, j]\n      }],\n      \"bg-color\": [{\n        bg: [r]\n      }],\n      \"gradient-from\": [{\n        from: [p]\n      }],\n      \"gradient-via\": [{\n        via: [p]\n      }],\n      \"gradient-to\": [{\n        to: [p]\n      }],\n      rounded: [{\n        rounded: [l]\n      }],\n      \"rounded-t\": [{\n        \"rounded-t\": [l]\n      }],\n      \"rounded-r\": [{\n        \"rounded-r\": [l]\n      }],\n      \"rounded-b\": [{\n        \"rounded-b\": [l]\n      }],\n      \"rounded-l\": [{\n        \"rounded-l\": [l]\n      }],\n      \"rounded-tl\": [{\n        \"rounded-tl\": [l]\n      }],\n      \"rounded-tr\": [{\n        \"rounded-tr\": [l]\n      }],\n      \"rounded-br\": [{\n        \"rounded-br\": [l]\n      }],\n      \"rounded-bl\": [{\n        \"rounded-bl\": [l]\n      }],\n      \"border-w\": [{\n        border: [i]\n      }],\n      \"border-w-x\": [{\n        \"border-x\": [i]\n      }],\n      \"border-w-y\": [{\n        \"border-y\": [i]\n      }],\n      \"border-w-t\": [{\n        \"border-t\": [i]\n      }],\n      \"border-w-r\": [{\n        \"border-r\": [i]\n      }],\n      \"border-w-b\": [{\n        \"border-b\": [i]\n      }],\n      \"border-w-l\": [{\n        \"border-l\": [i]\n      }],\n      \"border-opacity\": [{\n        \"border-opacity\": [g]\n      }],\n      \"border-style\": [{\n        border: [].concat([\"solid\", \"dashed\", \"dotted\", \"double\", \"none\"], [\"hidden\"])\n      }],\n      \"divide-x\": [{\n        \"divide-x\": [i]\n      }],\n      \"divide-x-reverse\": [\"divide-x-reverse\"],\n      \"divide-y\": [{\n        \"divide-y\": [i]\n      }],\n      \"divide-y-reverse\": [\"divide-y-reverse\"],\n      \"divide-opacity\": [{\n        \"divide-opacity\": [g]\n      }],\n      \"divide-style\": [{\n        divide: [\"solid\", \"dashed\", \"dotted\", \"double\", \"none\"]\n      }],\n      \"border-color\": [{\n        border: [n]\n      }],\n      \"border-color-x\": [{\n        \"border-x\": [n]\n      }],\n      \"border-color-y\": [{\n        \"border-y\": [n]\n      }],\n      \"border-color-t\": [{\n        \"border-t\": [n]\n      }],\n      \"border-color-r\": [{\n        \"border-r\": [n]\n      }],\n      \"border-color-b\": [{\n        \"border-b\": [n]\n      }],\n      \"border-color-l\": [{\n        \"border-l\": [n]\n      }],\n      \"divide-color\": [{\n        divide: [n]\n      }],\n      \"outline-style\": [{\n        outline: [\"\"].concat([\"solid\", \"dashed\", \"dotted\", \"double\", \"none\"], [\"hidden\"])\n      }],\n      \"outline-offset\": [{\n        \"outline-offset\": [x]\n      }],\n      \"outline-w\": [{\n        outline: [x]\n      }],\n      \"outline-color\": [{\n        outline: [r]\n      }],\n      \"ring-w\": [{\n        ring: E()\n      }],\n      \"ring-w-inset\": [\"ring-inset\"],\n      \"ring-color\": [{\n        ring: [r]\n      }],\n      \"ring-opacity\": [{\n        \"ring-opacity\": [g]\n      }],\n      \"ring-offset-w\": [{\n        \"ring-offset\": [x]\n      }],\n      \"ring-offset-color\": [{\n        \"ring-offset\": [r]\n      }],\n      shadow: [{\n        shadow: [\"\", \"inner\", \"none\", I, O]\n      }],\n      \"shadow-color\": [{\n        shadow: [N]\n      }],\n      opacity: [{\n        opacity: [g]\n      }],\n      \"mix-blend\": [{\n        \"mix-blend\": [\"normal\", \"multiply\", \"screen\", \"overlay\", \"darken\", \"lighten\", \"color-dodge\", \"color-burn\", \"hard-light\", \"soft-light\", \"difference\", \"exclusion\", \"hue\", \"saturation\", \"color\", \"luminosity\"]\n      }],\n      \"bg-blend\": [{\n        \"bg-blend\": [\"normal\", \"multiply\", \"screen\", \"overlay\", \"darken\", \"lighten\", \"color-dodge\", \"color-burn\", \"hard-light\", \"soft-light\", \"difference\", \"exclusion\", \"hue\", \"saturation\", \"color\", \"luminosity\"]\n      }],\n      filter: [{\n        filter: [\"\", \"none\"]\n      }],\n      blur: [{\n        blur: [o]\n      }],\n      brightness: [{\n        brightness: [t]\n      }],\n      contrast: [{\n        contrast: [a]\n      }],\n      \"drop-shadow\": [{\n        \"drop-shadow\": [\"\", \"none\", I, A]\n      }],\n      grayscale: [{\n        grayscale: [s]\n      }],\n      \"hue-rotate\": [{\n        \"hue-rotate\": [c]\n      }],\n      invert: [{\n        invert: [d]\n      }],\n      saturate: [{\n        saturate: [h]\n      }],\n      sepia: [{\n        sepia: [P]\n      }],\n      \"backdrop-filter\": [{\n        \"backdrop-filter\": [\"\", \"none\"]\n      }],\n      \"backdrop-blur\": [{\n        \"backdrop-blur\": [o]\n      }],\n      \"backdrop-brightness\": [{\n        \"backdrop-brightness\": [t]\n      }],\n      \"backdrop-contrast\": [{\n        \"backdrop-contrast\": [a]\n      }],\n      \"backdrop-grayscale\": [{\n        \"backdrop-grayscale\": [s]\n      }],\n      \"backdrop-hue-rotate\": [{\n        \"backdrop-hue-rotate\": [c]\n      }],\n      \"backdrop-invert\": [{\n        \"backdrop-invert\": [d]\n      }],\n      \"backdrop-opacity\": [{\n        \"backdrop-opacity\": [g]\n      }],\n      \"backdrop-saturate\": [{\n        \"backdrop-saturate\": [h]\n      }],\n      \"backdrop-sepia\": [{\n        \"backdrop-sepia\": [P]\n      }],\n      \"border-collapse\": [{\n        border: [\"collapse\", \"separate\"]\n      }],\n      \"table-layout\": [{\n        table: [\"auto\", \"fixed\"]\n      }],\n      transition: [{\n        transition: [\"none\", \"all\", \"\", \"colors\", \"opacity\", \"shadow\", \"transform\", A]\n      }],\n      duration: [{\n        duration: [G]\n      }],\n      ease: [{\n        ease: [\"linear\", \"in\", \"out\", \"in-out\", A]\n      }],\n      delay: [{\n        delay: [G]\n      }],\n      animate: [{\n        animate: [\"none\", \"spin\", \"ping\", \"pulse\", \"bounce\", A]\n      }],\n      transform: [{\n        transform: [\"\", \"gpu\", \"none\"]\n      }],\n      scale: [{\n        scale: [y]\n      }],\n      \"scale-x\": [{\n        \"scale-x\": [y]\n      }],\n      \"scale-y\": [{\n        \"scale-y\": [y]\n      }],\n      rotate: [{\n        rotate: [G, A]\n      }],\n      \"translate-x\": [{\n        \"translate-x\": [T]\n      }],\n      \"translate-y\": [{\n        \"translate-y\": [T]\n      }],\n      \"skew-x\": [{\n        \"skew-x\": [S]\n      }],\n      \"skew-y\": [{\n        \"skew-y\": [S]\n      }],\n      \"transform-origin\": [{\n        origin: [\"center\", \"top\", \"top-right\", \"right\", \"bottom-right\", \"bottom\", \"bottom-left\", \"left\", \"top-left\", A]\n      }],\n      accent: [{\n        accent: [\"auto\", r]\n      }],\n      appearance: [\"appearance-none\"],\n      cursor: [{\n        cursor: [\"auto\", \"default\", \"pointer\", \"wait\", \"text\", \"move\", \"help\", \"not-allowed\", \"none\", \"context-menu\", \"progress\", \"cell\", \"crosshair\", \"vertical-text\", \"alias\", \"copy\", \"no-drop\", \"grab\", \"grabbing\", \"all-scroll\", \"col-resize\", \"row-resize\", \"n-resize\", \"e-resize\", \"s-resize\", \"w-resize\", \"ne-resize\", \"nw-resize\", \"se-resize\", \"sw-resize\", \"ew-resize\", \"ns-resize\", \"nesw-resize\", \"nwse-resize\", \"zoom-in\", \"zoom-out\", A]\n      }],\n      \"caret-color\": [{\n        caret: [r]\n      }],\n      \"pointer-events\": [{\n        \"pointer-events\": [\"none\", \"auto\"]\n      }],\n      resize: [{\n        resize: [\"none\", \"y\", \"x\", \"\"]\n      }],\n      \"scroll-behavior\": [{\n        scroll: [\"auto\", \"smooth\"]\n      }],\n      \"scroll-m\": [{\n        \"scroll-m\": [e]\n      }],\n      \"scroll-mx\": [{\n        \"scroll-mx\": [e]\n      }],\n      \"scroll-my\": [{\n        \"scroll-my\": [e]\n      }],\n      \"scroll-mt\": [{\n        \"scroll-mt\": [e]\n      }],\n      \"scroll-mr\": [{\n        \"scroll-mr\": [e]\n      }],\n      \"scroll-mb\": [{\n        \"scroll-mb\": [e]\n      }],\n      \"scroll-ml\": [{\n        \"scroll-ml\": [e]\n      }],\n      \"scroll-p\": [{\n        \"scroll-p\": [e]\n      }],\n      \"scroll-px\": [{\n        \"scroll-px\": [e]\n      }],\n      \"scroll-py\": [{\n        \"scroll-py\": [e]\n      }],\n      \"scroll-pt\": [{\n        \"scroll-pt\": [e]\n      }],\n      \"scroll-pr\": [{\n        \"scroll-pr\": [e]\n      }],\n      \"scroll-pb\": [{\n        \"scroll-pb\": [e]\n      }],\n      \"scroll-pl\": [{\n        \"scroll-pl\": [e]\n      }],\n      \"snap-align\": [{\n        snap: [\"start\", \"end\", \"center\", \"align-none\"]\n      }],\n      \"snap-stop\": [{\n        snap: [\"normal\", \"always\"]\n      }],\n      \"snap-type\": [{\n        snap: [\"none\", \"x\", \"y\", \"both\"]\n      }],\n      \"snap-strictness\": [{\n        snap: [\"mandatory\", \"proximity\"]\n      }],\n      touch: [{\n        touch: [\"auto\", \"none\", \"pinch-zoom\", \"manipulation\", {\n          pan: [\"x\", \"left\", \"right\", \"y\", \"up\", \"down\"]\n        }]\n      }],\n      select: [{\n        select: [\"none\", \"text\", \"all\", \"auto\"]\n      }],\n      \"will-change\": [{\n        \"will-change\": [\"auto\", \"scroll\", \"contents\", \"transform\", A]\n      }],\n      fill: [{\n        fill: [r]\n      }],\n      \"stroke-w\": [{\n        stroke: [x]\n      }],\n      stroke: [{\n        stroke: [r]\n      }],\n      sr: [\"sr-only\", \"not-sr-only\"]\n    },\n    conflictingClassGroups: {\n      overflow: [\"overflow-x\", \"overflow-y\"],\n      overscroll: [\"overscroll-x\", \"overscroll-y\"],\n      inset: [\"inset-x\", \"inset-y\", \"top\", \"right\", \"bottom\", \"left\"],\n      \"inset-x\": [\"right\", \"left\"],\n      \"inset-y\": [\"top\", \"bottom\"],\n      flex: [\"basis\", \"grow\", \"shrink\"],\n      \"col-start-end\": [\"col-start\", \"col-end\"],\n      \"row-start-end\": [\"row-start\", \"row-end\"],\n      gap: [\"gap-x\", \"gap-y\"],\n      p: [\"px\", \"py\", \"pt\", \"pr\", \"pb\", \"pl\"],\n      px: [\"pr\", \"pl\"],\n      py: [\"pt\", \"pb\"],\n      m: [\"mx\", \"my\", \"mt\", \"mr\", \"mb\", \"ml\"],\n      mx: [\"mr\", \"ml\"],\n      my: [\"mt\", \"mb\"],\n      \"font-size\": [\"leading\"],\n      \"fvn-normal\": [\"fvn-ordinal\", \"fvn-slashed-zero\", \"fvn-figure\", \"fvn-spacing\", \"fvn-fraction\"],\n      \"fvn-ordinal\": [\"fvn-normal\"],\n      \"fvn-slashed-zero\": [\"fvn-normal\"],\n      \"fvn-figure\": [\"fvn-normal\"],\n      \"fvn-spacing\": [\"fvn-normal\"],\n      \"fvn-fraction\": [\"fvn-normal\"],\n      rounded: [\"rounded-t\", \"rounded-r\", \"rounded-b\", \"rounded-l\", \"rounded-tl\", \"rounded-tr\", \"rounded-br\", \"rounded-bl\"],\n      \"rounded-t\": [\"rounded-tl\", \"rounded-tr\"],\n      \"rounded-r\": [\"rounded-tr\", \"rounded-br\"],\n      \"rounded-b\": [\"rounded-br\", \"rounded-bl\"],\n      \"rounded-l\": [\"rounded-tl\", \"rounded-bl\"],\n      \"border-w\": [\"border-w-t\", \"border-w-r\", \"border-w-b\", \"border-w-l\"],\n      \"border-w-x\": [\"border-w-r\", \"border-w-l\"],\n      \"border-w-y\": [\"border-w-t\", \"border-w-b\"],\n      \"border-color\": [\"border-color-t\", \"border-color-r\", \"border-color-b\", \"border-color-l\"],\n      \"border-color-x\": [\"border-color-r\", \"border-color-l\"],\n      \"border-color-y\": [\"border-color-t\", \"border-color-b\"],\n      \"scroll-m\": [\"scroll-mx\", \"scroll-my\", \"scroll-mt\", \"scroll-mr\", \"scroll-mb\", \"scroll-ml\"],\n      \"scroll-mx\": [\"scroll-mr\", \"scroll-ml\"],\n      \"scroll-my\": [\"scroll-mt\", \"scroll-mb\"],\n      \"scroll-p\": [\"scroll-px\", \"scroll-py\", \"scroll-pt\", \"scroll-pr\", \"scroll-pb\", \"scroll-pl\"],\n      \"scroll-px\": [\"scroll-pr\", \"scroll-pl\"],\n      \"scroll-py\": [\"scroll-pt\", \"scroll-pb\"]\n    }\n  };\n}\n\nvar W = p(S);\n\nfunction T(r, e) {\n  for (var o in e) {\n    M(r, o, e[o]);\n  }\n\n  return r;\n}\n\nvar _ = Object.prototype.hasOwnProperty,\n    E = new Set([\"string\", \"number\", \"boolean\"]);\n\nfunction M(r, e, o) {\n  if (_.call(r, e) && !E.has(typeof o) && null !== o) {\n    if (Array.isArray(o) && Array.isArray(r[e])) r[e] = r[e].concat(o);else if (\"object\" == typeof o && \"object\" == typeof r[e]) {\n      if (null === r[e]) return void (r[e] = o);\n\n      for (var t in o) {\n        M(r[e], t, o[t]);\n      }\n    }\n  } else r[e] = o;\n}\n\nexports.createTailwindMerge = p, exports.extendTailwindMerge = function (r) {\n  for (var e = arguments.length, o = new Array(e > 1 ? e - 1 : 0), t = 1; t < e; t++) {\n    o[t - 1] = arguments[t];\n  }\n\n  return p.apply(void 0, \"function\" == typeof r ? [S, r].concat(o) : [function () {\n    return T(S(), r);\n  }].concat(o));\n}, exports.fromTheme = b, exports.getDefaultConfig = S, exports.mergeConfigs = T, exports.twMerge = W, exports.validators = P; //# sourceMappingURL=tailwind-merge.cjs.production.min.js.map","map":null,"metadata":{},"sourceType":"script"}