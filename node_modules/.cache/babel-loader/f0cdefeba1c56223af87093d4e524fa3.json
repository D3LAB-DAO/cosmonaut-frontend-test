{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nvar _objectSpread = require(\"/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _objectWithoutProperties = require(\"/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\n\nvar _slicedToArray = require(\"/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _toConsumableArray = require(\"/Users/chugyohyeon/Documents/cosmonaut-frontend/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _excluded = [\"$as\"];\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cleanTemplate = exports.mergeArrays = void 0;\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar domElements_1 = __importDefault(require(\"./domElements\"));\n\nvar tailwind_merge_1 = require(\"tailwind-merge\");\n\nvar isTwElement = Symbol(\"isTwElement?\");\n\nvar mergeArrays = function mergeArrays(template, templateElements) {\n  return template.reduce(function (acc, c, i) {\n    return acc.concat(c || [], templateElements[i] || []);\n  }, []);\n};\n\nexports.mergeArrays = mergeArrays;\n\nvar cleanTemplate = function cleanTemplate(template) {\n  var inheritedClasses = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  var newClasses = template.join(\" \").trim().replace(/\\n/g, \" \").replace(/\\s{2,}/g, \" \").split(\" \").filter(function (c) {\n    return c !== \",\";\n  });\n  var inheritedClassesArray = inheritedClasses ? inheritedClasses.split(\" \") : [];\n  return (0, tailwind_merge_1.twMerge).apply(void 0, _toConsumableArray(newClasses.concat(inheritedClassesArray).filter(function (c) {\n    return c !== \" \";\n  })));\n};\n\nexports.cleanTemplate = cleanTemplate;\n\nvar removeTransientProps = function removeTransientProps(_ref) {\n  var _ref2 = _slicedToArray(_ref, 1),\n      key = _ref2[0];\n\n  return key.charAt(0) !== \"$\";\n};\n\nvar templateFunctionFactory = function templateFunctionFactory(Element) {\n  return function (template) {\n    for (var _len = arguments.length, templateElements = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      templateElements[_key - 1] = arguments[_key];\n    }\n\n    var TwComponent = react_1.default.forwardRef(function (_ref3, ref) {\n      var $as = _ref3.$as,\n          props = _objectWithoutProperties(_ref3, _excluded);\n\n      var FinalElement = $as || Element;\n      var filteredProps = FinalElement[isTwElement] === true ? props : Object.fromEntries(Object.entries(props).filter(removeTransientProps));\n      return react_1.default.createElement(FinalElement, _objectSpread(_objectSpread({}, filteredProps), {}, {\n        ref: ref,\n        className: (0, exports.cleanTemplate)((0, exports.mergeArrays)(template, templateElements.map(function (t) {\n          return t(_objectSpread(_objectSpread({}, props), {}, {\n            $as: $as\n          }));\n        })), props.className)\n      }));\n    });\n    TwComponent[isTwElement] = true;\n\n    if (typeof Element !== \"string\") {\n      TwComponent.displayName = Element.displayName || Element.name || \"tw.Component\";\n    } else {\n      TwComponent.displayName = \"tw.\" + Element;\n    }\n\n    return TwComponent;\n  };\n};\n\nvar intrinsicElementsMap = domElements_1.default.reduce(function (acc, DomElement) {\n  return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, DomElement, templateFunctionFactory(DomElement)));\n}, {});\nvar tw = Object.assign(templateFunctionFactory, intrinsicElementsMap);\nexports.default = tw;","map":null,"metadata":{},"sourceType":"script"}